ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_RCC_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_RCC_DeInit:
  27              	.LFB130:
  28              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @file    stm32f4xx_hal_rcc.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSI 16MHz) with Flash 0 wait state, Flash prefetch buffer, D-Cache
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           all peripherals mapped on these busses are running at HSI speed.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the AHB and APB busses prescalers
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS/SDIO/RNG)
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC Limitations #####
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       from/to registers.
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on AHB: the delay is 2 AHB clock cycle
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on APB: the delay is 2 APB clock cycle
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Implemented Workaround:
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) For AHB & APB peripherals, a dummy read to the peripheral register has been
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @endverbatim
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @attention
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * All rights reserved.</center></h2>
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * the "License"; You may not use this file except in compliance with the
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * License. You may obtain a copy of the License at:
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #include "stm32f4xx_hal.h"
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup STM32F4xx_HAL_Driver
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC RCC
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief RCC HAL module driver
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup RCC_Private_Constants
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO1_CLK_ENABLE()   __HAL_RCC_GPIOA_CLK_ENABLE()
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO2_CLK_ENABLE()   __HAL_RCC_GPIOC_CLK_ENABLE()
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_GPIO_PORT         GPIOC
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_PIN               GPIO_PIN_9
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private functions ---------------------------------------------------------*/
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *  @{
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *  @brief    Initialization and Configuration functions
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System busses clocks (SYSCLK, AHB, APB1
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        and APB2).
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSI (high-speed internal), 16 MHz factory-trimmed RC used directly or through
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the PLL as System clock source.
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source.
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSE (high-speed external), 4 to 26 MHz crystal oscillator used directly or
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also as RTC clock source.
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) PLL (clocked by HSI or HSE), featuring two different output clocks:
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The first output is used to generate the high speed system clock (up to 168 MHz)
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDIO (<= 48 MHz).
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              and if a HSE clock failure occurs(HSE used directly or through PLL as System
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source), the System clocks automatically switched to HSI and an interrupt
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              is generated if enabled. The interrupt is linked to the Cortex-M4 NMI
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              (Non-Maskable Interrupt) exception vector.
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO1 (microcontroller clock output), used to output HSI, LSE, HSE or PLL
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PA8 pin.
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO2 (microcontroller clock output), used to output HSE, PLL, SYSCLK or PLLI2S
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PC9 pin.
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] System, AHB and APB busses clocks configuration
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              HSE and PLL.
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              prescaler and used to clock the CPU, memory and peripherals mapped
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              from AHB clock through configurable prescalers and used to clock
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the peripherals mapped on these busses. You can use
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F405xx/07xx and STM32F415xx/17xx devices, the maximum
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              frequency of the SYSCLK and HCLK is 168 MHz, PCLK2 84 MHz and PCLK1 42 MHz.
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F42xxx, STM32F43xxx, STM32F446xx, STM32F469xx and STM32F479xx devices,
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the maximum frequency of the SYSCLK and HCLK is 180 MHz, PCLK2 90 MHz and PCLK1 45 MHz
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F401xx, the maximum frequency of the SYSCLK and HCLK is 84 MHz,
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 84 MHz and PCLK1 42 MHz.
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F41xxx, the maximum frequency of the SYSCLK and HCLK is 100 MHz,
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 100 MHz and PCLK1 50 MHz.
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSE and PLL OFF
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - All interrupts disabled
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - Peripheral clocks
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HAL status
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_DeInit(void)
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
  29              		.loc 1 203 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
  41              		.loc 1 204 10
  42 0004 0023     		movs	r3, #0
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
  43              		.loc 1 205 1
  44 0006 1846     		mov	r0, r3
  45 0008 BD46     		mov	sp, r7
  46              	.LCFI2:
  47              		.cfi_def_cfa_register 13
  48              		@ sp needed
  49 000a 5DF8047B 		ldr	r7, [sp], #4
  50              	.LCFI3:
  51              		.cfi_restore 7
  52              		.cfi_def_cfa_offset 0
  53 000e 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE130:
  57              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
  58              		.align	1
  59              		.weak	HAL_RCC_OscConfig
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv4-sp-d16
  65              	HAL_RCC_OscConfig:
  66              	.LFB131:
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         supported by this API. User should request a transition to LSE Off
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         supported by this API. User should request a transition to HSE Off
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HAL status
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 6


  67              		.loc 1 222 1
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 24
  70              		@ frame_needed = 1, uses_anonymous_args = 0
  71 0000 80B5     		push	{r7, lr}
  72              	.LCFI4:
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 7, -8
  75              		.cfi_offset 14, -4
  76 0002 86B0     		sub	sp, sp, #24
  77              	.LCFI5:
  78              		.cfi_def_cfa_offset 32
  79 0004 00AF     		add	r7, sp, #0
  80              	.LCFI6:
  81              		.cfi_def_cfa_register 7
  82 0006 7860     		str	r0, [r7, #4]
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t tickstart, pll_config;
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check Null pointer */
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
  83              		.loc 1 226 5
  84 0008 7B68     		ldr	r3, [r7, #4]
  85 000a 002B     		cmp	r3, #0
  86 000c 01D1     		bne	.L4
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     return HAL_ERROR;
  87              		.loc 1 228 12
  88 000e 0123     		movs	r3, #1
  89 0010 64E2     		b	.L5
  90              	.L4:
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
  91              		.loc 1 234 25
  92 0012 7B68     		ldr	r3, [r7, #4]
  93 0014 1B68     		ldr	r3, [r3]
  94              		.loc 1 234 43
  95 0016 03F00103 		and	r3, r3, #1
  96              		.loc 1 234 5
  97 001a 002B     		cmp	r3, #0
  98 001c 75D0     		beq	.L6
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not dis
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
  99              		.loc 1 239 9
 100 001e A34B     		ldr	r3, .L59
 101 0020 9B68     		ldr	r3, [r3, #8]
 102 0022 03F00C03 		and	r3, r3, #12
 103              		.loc 1 239 7
 104 0026 042B     		cmp	r3, #4
 105 0028 0CD0     		beq	.L7
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 7


 106              		.loc 1 240 9 discriminator 1
 107 002a A04B     		ldr	r3, .L59
 108 002c 9B68     		ldr	r3, [r3, #8]
 109 002e 03F00C03 		and	r3, r3, #12
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 110              		.loc 1 239 60 discriminator 1
 111 0032 082B     		cmp	r3, #8
 112 0034 12D1     		bne	.L8
 113              		.loc 1 240 68
 114 0036 9D4B     		ldr	r3, .L59
 115 0038 5B68     		ldr	r3, [r3, #4]
 116              		.loc 1 240 78
 117 003a 03F48003 		and	r3, r3, #4194304
 118              		.loc 1 240 60
 119 003e B3F5800F 		cmp	r3, #4194304
 120 0042 0BD1     		bne	.L8
 121              	.L7:
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 122              		.loc 1 242 11
 123 0044 994B     		ldr	r3, .L59
 124 0046 1B68     		ldr	r3, [r3]
 125 0048 03F40033 		and	r3, r3, #131072
 126              		.loc 1 242 9
 127 004c 002B     		cmp	r3, #0
 128 004e 5BD0     		beq	.L58
 129              		.loc 1 242 78 discriminator 1
 130 0050 7B68     		ldr	r3, [r7, #4]
 131 0052 5B68     		ldr	r3, [r3, #4]
 132              		.loc 1 242 57 discriminator 1
 133 0054 002B     		cmp	r3, #0
 134 0056 57D1     		bne	.L58
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 135              		.loc 1 244 16
 136 0058 0123     		movs	r3, #1
 137 005a 3FE2     		b	.L5
 138              	.L8:
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 139              		.loc 1 250 7
 140 005c 7B68     		ldr	r3, [r7, #4]
 141 005e 5B68     		ldr	r3, [r3, #4]
 142 0060 B3F5803F 		cmp	r3, #65536
 143 0064 06D1     		bne	.L10
 144              		.loc 1 250 7 is_stmt 0 discriminator 1
 145 0066 914B     		ldr	r3, .L59
 146 0068 1B68     		ldr	r3, [r3]
 147 006a 904A     		ldr	r2, .L59
 148 006c 43F48033 		orr	r3, r3, #65536
 149 0070 1360     		str	r3, [r2]
 150 0072 1DE0     		b	.L11
 151              	.L10:
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 8


 152              		.loc 1 250 7 discriminator 2
 153 0074 7B68     		ldr	r3, [r7, #4]
 154 0076 5B68     		ldr	r3, [r3, #4]
 155 0078 B3F5A02F 		cmp	r3, #327680
 156 007c 0CD1     		bne	.L12
 157              		.loc 1 250 7 discriminator 3
 158 007e 8B4B     		ldr	r3, .L59
 159 0080 1B68     		ldr	r3, [r3]
 160 0082 8A4A     		ldr	r2, .L59
 161 0084 43F48023 		orr	r3, r3, #262144
 162 0088 1360     		str	r3, [r2]
 163 008a 884B     		ldr	r3, .L59
 164 008c 1B68     		ldr	r3, [r3]
 165 008e 874A     		ldr	r2, .L59
 166 0090 43F48033 		orr	r3, r3, #65536
 167 0094 1360     		str	r3, [r2]
 168 0096 0BE0     		b	.L11
 169              	.L12:
 170              		.loc 1 250 7 discriminator 4
 171 0098 844B     		ldr	r3, .L59
 172 009a 1B68     		ldr	r3, [r3]
 173 009c 834A     		ldr	r2, .L59
 174 009e 23F48033 		bic	r3, r3, #65536
 175 00a2 1360     		str	r3, [r2]
 176 00a4 814B     		ldr	r3, .L59
 177 00a6 1B68     		ldr	r3, [r3]
 178 00a8 804A     		ldr	r2, .L59
 179 00aa 23F48023 		bic	r3, r3, #262144
 180 00ae 1360     		str	r3, [r2]
 181              	.L11:
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSE State */
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 182              		.loc 1 253 28 is_stmt 1
 183 00b0 7B68     		ldr	r3, [r7, #4]
 184 00b2 5B68     		ldr	r3, [r3, #4]
 185              		.loc 1 253 9
 186 00b4 002B     		cmp	r3, #0
 187 00b6 13D0     		beq	.L13
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 188              		.loc 1 256 21
 189 00b8 FFF7FEFF 		bl	HAL_GetTick
 190 00bc 3861     		str	r0, [r7, #16]
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is ready */
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 191              		.loc 1 259 14
 192 00be 08E0     		b	.L14
 193              	.L15:
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 194              		.loc 1 261 15
 195 00c0 FFF7FEFF 		bl	HAL_GetTick
 196 00c4 0246     		mov	r2, r0
 197              		.loc 1 261 29
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 9


 198 00c6 3B69     		ldr	r3, [r7, #16]
 199 00c8 D31A     		subs	r3, r2, r3
 200              		.loc 1 261 13
 201 00ca 642B     		cmp	r3, #100
 202 00cc 01D9     		bls	.L14
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 203              		.loc 1 263 20
 204 00ce 0323     		movs	r3, #3
 205 00d0 04E2     		b	.L5
 206              	.L14:
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 207              		.loc 1 259 15
 208 00d2 764B     		ldr	r3, .L59
 209 00d4 1B68     		ldr	r3, [r3]
 210 00d6 03F40033 		and	r3, r3, #131072
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 211              		.loc 1 259 14
 212 00da 002B     		cmp	r3, #0
 213 00dc F0D0     		beq	.L15
 214 00de 14E0     		b	.L6
 215              	.L13:
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 216              		.loc 1 270 21
 217 00e0 FFF7FEFF 		bl	HAL_GetTick
 218 00e4 3861     		str	r0, [r7, #16]
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is bypassed or disabled */
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 219              		.loc 1 273 14
 220 00e6 08E0     		b	.L16
 221              	.L17:
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 222              		.loc 1 275 15
 223 00e8 FFF7FEFF 		bl	HAL_GetTick
 224 00ec 0246     		mov	r2, r0
 225              		.loc 1 275 29
 226 00ee 3B69     		ldr	r3, [r7, #16]
 227 00f0 D31A     		subs	r3, r2, r3
 228              		.loc 1 275 13
 229 00f2 642B     		cmp	r3, #100
 230 00f4 01D9     		bls	.L16
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 231              		.loc 1 277 20
 232 00f6 0323     		movs	r3, #3
 233 00f8 F0E1     		b	.L5
 234              	.L16:
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 235              		.loc 1 273 15
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 10


 236 00fa 6C4B     		ldr	r3, .L59
 237 00fc 1B68     		ldr	r3, [r3]
 238 00fe 03F40033 		and	r3, r3, #131072
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 239              		.loc 1 273 14
 240 0102 002B     		cmp	r3, #0
 241 0104 F0D1     		bne	.L17
 242 0106 00E0     		b	.L6
 243              	.L58:
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 244              		.loc 1 242 9
 245 0108 00BF     		nop
 246              	.L6:
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 247              		.loc 1 284 25
 248 010a 7B68     		ldr	r3, [r7, #4]
 249 010c 1B68     		ldr	r3, [r3]
 250              		.loc 1 284 43
 251 010e 03F00203 		and	r3, r3, #2
 252              		.loc 1 284 5
 253 0112 002B     		cmp	r3, #0
 254 0114 63D0     		beq	.L18
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 255              		.loc 1 291 9
 256 0116 654B     		ldr	r3, .L59
 257 0118 9B68     		ldr	r3, [r3, #8]
 258 011a 03F00C03 		and	r3, r3, #12
 259              		.loc 1 291 7
 260 011e 002B     		cmp	r3, #0
 261 0120 0BD0     		beq	.L19
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 262              		.loc 1 292 9 discriminator 1
 263 0122 624B     		ldr	r3, .L59
 264 0124 9B68     		ldr	r3, [r3, #8]
 265 0126 03F00C03 		and	r3, r3, #12
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 266              		.loc 1 291 60 discriminator 1
 267 012a 082B     		cmp	r3, #8
 268 012c 1CD1     		bne	.L20
 269              		.loc 1 292 68
 270 012e 5F4B     		ldr	r3, .L59
 271 0130 5B68     		ldr	r3, [r3, #4]
 272              		.loc 1 292 78
 273 0132 03F48003 		and	r3, r3, #4194304
 274              		.loc 1 292 60
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 11


 275 0136 002B     		cmp	r3, #0
 276 0138 16D1     		bne	.L20
 277              	.L19:
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 278              		.loc 1 295 11
 279 013a 5C4B     		ldr	r3, .L59
 280 013c 1B68     		ldr	r3, [r3]
 281 013e 03F00203 		and	r3, r3, #2
 282              		.loc 1 295 9
 283 0142 002B     		cmp	r3, #0
 284 0144 05D0     		beq	.L21
 285              		.loc 1 295 78 discriminator 1
 286 0146 7B68     		ldr	r3, [r7, #4]
 287 0148 DB68     		ldr	r3, [r3, #12]
 288              		.loc 1 295 57 discriminator 1
 289 014a 012B     		cmp	r3, #1
 290 014c 01D0     		beq	.L21
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 291              		.loc 1 297 16
 292 014e 0123     		movs	r3, #1
 293 0150 C4E1     		b	.L5
 294              	.L21:
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 295              		.loc 1 303 9
 296 0152 564B     		ldr	r3, .L59
 297 0154 1B68     		ldr	r3, [r3]
 298 0156 23F0F802 		bic	r2, r3, #248
 299 015a 7B68     		ldr	r3, [r7, #4]
 300 015c 1B69     		ldr	r3, [r3, #16]
 301 015e DB00     		lsls	r3, r3, #3
 302 0160 5249     		ldr	r1, .L59
 303 0162 1343     		orrs	r3, r3, r2
 304 0164 0B60     		str	r3, [r1]
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 305              		.loc 1 295 9
 306 0166 3AE0     		b	.L18
 307              	.L20:
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSI State */
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 308              		.loc 1 309 28
 309 0168 7B68     		ldr	r3, [r7, #4]
 310 016a DB68     		ldr	r3, [r3, #12]
 311              		.loc 1 309 9
 312 016c 002B     		cmp	r3, #0
 313 016e 20D0     		beq	.L22
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 12


 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 314              		.loc 1 312 9
 315 0170 4F4B     		ldr	r3, .L59+4
 316 0172 0122     		movs	r2, #1
 317 0174 1A60     		str	r2, [r3]
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 318              		.loc 1 315 21
 319 0176 FFF7FEFF 		bl	HAL_GetTick
 320 017a 3861     		str	r0, [r7, #16]
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 321              		.loc 1 318 14
 322 017c 08E0     		b	.L23
 323              	.L24:
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 324              		.loc 1 320 15
 325 017e FFF7FEFF 		bl	HAL_GetTick
 326 0182 0246     		mov	r2, r0
 327              		.loc 1 320 29
 328 0184 3B69     		ldr	r3, [r7, #16]
 329 0186 D31A     		subs	r3, r2, r3
 330              		.loc 1 320 13
 331 0188 022B     		cmp	r3, #2
 332 018a 01D9     		bls	.L23
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 333              		.loc 1 322 20
 334 018c 0323     		movs	r3, #3
 335 018e A5E1     		b	.L5
 336              	.L23:
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 337              		.loc 1 318 15
 338 0190 464B     		ldr	r3, .L59
 339 0192 1B68     		ldr	r3, [r3]
 340 0194 03F00203 		and	r3, r3, #2
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 341              		.loc 1 318 14
 342 0198 002B     		cmp	r3, #0
 343 019a F0D0     		beq	.L24
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 344              		.loc 1 327 9
 345 019c 434B     		ldr	r3, .L59
 346 019e 1B68     		ldr	r3, [r3]
 347 01a0 23F0F802 		bic	r2, r3, #248
 348 01a4 7B68     		ldr	r3, [r7, #4]
 349 01a6 1B69     		ldr	r3, [r3, #16]
 350 01a8 DB00     		lsls	r3, r3, #3
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 13


 351 01aa 4049     		ldr	r1, .L59
 352 01ac 1343     		orrs	r3, r3, r2
 353 01ae 0B60     		str	r3, [r1]
 354 01b0 15E0     		b	.L18
 355              	.L22:
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 356              		.loc 1 332 9
 357 01b2 3F4B     		ldr	r3, .L59+4
 358 01b4 0022     		movs	r2, #0
 359 01b6 1A60     		str	r2, [r3]
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 360              		.loc 1 335 21
 361 01b8 FFF7FEFF 		bl	HAL_GetTick
 362 01bc 3861     		str	r0, [r7, #16]
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 363              		.loc 1 338 14
 364 01be 08E0     		b	.L25
 365              	.L26:
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 366              		.loc 1 340 15
 367 01c0 FFF7FEFF 		bl	HAL_GetTick
 368 01c4 0246     		mov	r2, r0
 369              		.loc 1 340 29
 370 01c6 3B69     		ldr	r3, [r7, #16]
 371 01c8 D31A     		subs	r3, r2, r3
 372              		.loc 1 340 13
 373 01ca 022B     		cmp	r3, #2
 374 01cc 01D9     		bls	.L25
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 375              		.loc 1 342 20
 376 01ce 0323     		movs	r3, #3
 377 01d0 84E1     		b	.L5
 378              	.L25:
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 379              		.loc 1 338 15
 380 01d2 364B     		ldr	r3, .L59
 381 01d4 1B68     		ldr	r3, [r3]
 382 01d6 03F00203 		and	r3, r3, #2
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 383              		.loc 1 338 14
 384 01da 002B     		cmp	r3, #0
 385 01dc F0D1     		bne	.L26
 386              	.L18:
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 14


 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 387              		.loc 1 349 25
 388 01de 7B68     		ldr	r3, [r7, #4]
 389 01e0 1B68     		ldr	r3, [r3]
 390              		.loc 1 349 43
 391 01e2 03F00803 		and	r3, r3, #8
 392              		.loc 1 349 5
 393 01e6 002B     		cmp	r3, #0
 394 01e8 30D0     		beq	.L27
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSI State */
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 395              		.loc 1 355 26
 396 01ea 7B68     		ldr	r3, [r7, #4]
 397 01ec 5B69     		ldr	r3, [r3, #20]
 398              		.loc 1 355 7
 399 01ee 002B     		cmp	r3, #0
 400 01f0 16D0     		beq	.L28
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 401              		.loc 1 358 7
 402 01f2 304B     		ldr	r3, .L59+8
 403 01f4 0122     		movs	r2, #1
 404 01f6 1A60     		str	r2, [r3]
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 405              		.loc 1 361 19
 406 01f8 FFF7FEFF 		bl	HAL_GetTick
 407 01fc 3861     		str	r0, [r7, #16]
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 408              		.loc 1 364 12
 409 01fe 08E0     		b	.L29
 410              	.L30:
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 411              		.loc 1 366 13
 412 0200 FFF7FEFF 		bl	HAL_GetTick
 413 0204 0246     		mov	r2, r0
 414              		.loc 1 366 27
 415 0206 3B69     		ldr	r3, [r7, #16]
 416 0208 D31A     		subs	r3, r2, r3
 417              		.loc 1 366 11
 418 020a 022B     		cmp	r3, #2
 419 020c 01D9     		bls	.L29
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 420              		.loc 1 368 18
 421 020e 0323     		movs	r3, #3
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 15


 422 0210 64E1     		b	.L5
 423              	.L29:
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 424              		.loc 1 364 13
 425 0212 264B     		ldr	r3, .L59
 426 0214 5B6F     		ldr	r3, [r3, #116]
 427 0216 03F00203 		and	r3, r3, #2
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 428              		.loc 1 364 12
 429 021a 002B     		cmp	r3, #0
 430 021c F0D0     		beq	.L30
 431 021e 15E0     		b	.L27
 432              	.L28:
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 433              		.loc 1 375 7
 434 0220 244B     		ldr	r3, .L59+8
 435 0222 0022     		movs	r2, #0
 436 0224 1A60     		str	r2, [r3]
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick */
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 437              		.loc 1 378 19
 438 0226 FFF7FEFF 		bl	HAL_GetTick
 439 022a 3861     		str	r0, [r7, #16]
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 440              		.loc 1 381 12
 441 022c 08E0     		b	.L31
 442              	.L32:
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 443              		.loc 1 383 13
 444 022e FFF7FEFF 		bl	HAL_GetTick
 445 0232 0246     		mov	r2, r0
 446              		.loc 1 383 27
 447 0234 3B69     		ldr	r3, [r7, #16]
 448 0236 D31A     		subs	r3, r2, r3
 449              		.loc 1 383 11
 450 0238 022B     		cmp	r3, #2
 451 023a 01D9     		bls	.L31
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 452              		.loc 1 385 18
 453 023c 0323     		movs	r3, #3
 454 023e 4DE1     		b	.L5
 455              	.L31:
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 456              		.loc 1 381 13
 457 0240 1A4B     		ldr	r3, .L59
 458 0242 5B6F     		ldr	r3, [r3, #116]
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 16


 459 0244 03F00203 		and	r3, r3, #2
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 460              		.loc 1 381 12
 461 0248 002B     		cmp	r3, #0
 462 024a F0D1     		bne	.L32
 463              	.L27:
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 464              		.loc 1 391 25
 465 024c 7B68     		ldr	r3, [r7, #4]
 466 024e 1B68     		ldr	r3, [r3]
 467              		.loc 1 391 43
 468 0250 03F00403 		and	r3, r3, #4
 469              		.loc 1 391 5
 470 0254 002B     		cmp	r3, #0
 471 0256 00F0A080 		beq	.L33
 472              	.LBB2:
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 473              		.loc 1 393 22
 474 025a 0023     		movs	r3, #0
 475 025c FB75     		strb	r3, [r7, #23]
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 476              		.loc 1 400 8
 477 025e 134B     		ldr	r3, .L59
 478 0260 1B6C     		ldr	r3, [r3, #64]
 479 0262 03F08053 		and	r3, r3, #268435456
 480              		.loc 1 400 7
 481 0266 002B     		cmp	r3, #0
 482 0268 0FD1     		bne	.L34
 483              	.LBB3:
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 484              		.loc 1 402 7
 485 026a 0023     		movs	r3, #0
 486 026c BB60     		str	r3, [r7, #8]
 487 026e 0F4B     		ldr	r3, .L59
 488 0270 1B6C     		ldr	r3, [r3, #64]
 489 0272 0E4A     		ldr	r2, .L59
 490 0274 43F08053 		orr	r3, r3, #268435456
 491 0278 1364     		str	r3, [r2, #64]
 492 027a 0C4B     		ldr	r3, .L59
 493 027c 1B6C     		ldr	r3, [r3, #64]
 494 027e 03F08053 		and	r3, r3, #268435456
 495 0282 BB60     		str	r3, [r7, #8]
 496 0284 BB68     		ldr	r3, [r7, #8]
 497              	.LBE3:
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 17


 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pwrclkchanged = SET;
 498              		.loc 1 403 21
 499 0286 0123     		movs	r3, #1
 500 0288 FB75     		strb	r3, [r7, #23]
 501              	.L34:
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 502              		.loc 1 406 8
 503 028a 0B4B     		ldr	r3, .L59+12
 504 028c 1B68     		ldr	r3, [r3]
 505 028e 03F48073 		and	r3, r3, #256
 506              		.loc 1 406 7
 507 0292 002B     		cmp	r3, #0
 508 0294 21D1     		bne	.L35
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 509              		.loc 1 409 7
 510 0296 084B     		ldr	r3, .L59+12
 511 0298 1B68     		ldr	r3, [r3]
 512 029a 074A     		ldr	r2, .L59+12
 513 029c 43F48073 		orr	r3, r3, #256
 514 02a0 1360     		str	r3, [r2]
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 515              		.loc 1 412 19
 516 02a2 FFF7FEFF 		bl	HAL_GetTick
 517 02a6 3861     		str	r0, [r7, #16]
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 518              		.loc 1 414 12
 519 02a8 11E0     		b	.L36
 520              	.L60:
 521 02aa 00BF     		.align	2
 522              	.L59:
 523 02ac 00380240 		.word	1073887232
 524 02b0 00004742 		.word	1111949312
 525 02b4 800E4742 		.word	1111953024
 526 02b8 00700040 		.word	1073770496
 527              	.L37:
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 528              		.loc 1 416 13
 529 02bc FFF7FEFF 		bl	HAL_GetTick
 530 02c0 0246     		mov	r2, r0
 531              		.loc 1 416 27
 532 02c2 3B69     		ldr	r3, [r7, #16]
 533 02c4 D31A     		subs	r3, r2, r3
 534              		.loc 1 416 11
 535 02c6 022B     		cmp	r3, #2
 536 02c8 01D9     		bls	.L36
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 537              		.loc 1 418 18
 538 02ca 0323     		movs	r3, #3
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 18


 539 02cc 06E1     		b	.L5
 540              	.L36:
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 541              		.loc 1 414 13
 542 02ce 854B     		ldr	r3, .L61
 543 02d0 1B68     		ldr	r3, [r3]
 544 02d2 03F48073 		and	r3, r3, #256
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 545              		.loc 1 414 12
 546 02d6 002B     		cmp	r3, #0
 547 02d8 F0D0     		beq	.L37
 548              	.L35:
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 549              		.loc 1 424 5
 550 02da 7B68     		ldr	r3, [r7, #4]
 551 02dc 9B68     		ldr	r3, [r3, #8]
 552 02de 012B     		cmp	r3, #1
 553 02e0 06D1     		bne	.L38
 554              		.loc 1 424 5 is_stmt 0 discriminator 1
 555 02e2 814B     		ldr	r3, .L61+4
 556 02e4 1B6F     		ldr	r3, [r3, #112]
 557 02e6 804A     		ldr	r2, .L61+4
 558 02e8 43F00103 		orr	r3, r3, #1
 559 02ec 1367     		str	r3, [r2, #112]
 560 02ee 1CE0     		b	.L39
 561              	.L38:
 562              		.loc 1 424 5 discriminator 2
 563 02f0 7B68     		ldr	r3, [r7, #4]
 564 02f2 9B68     		ldr	r3, [r3, #8]
 565 02f4 052B     		cmp	r3, #5
 566 02f6 0CD1     		bne	.L40
 567              		.loc 1 424 5 discriminator 3
 568 02f8 7B4B     		ldr	r3, .L61+4
 569 02fa 1B6F     		ldr	r3, [r3, #112]
 570 02fc 7A4A     		ldr	r2, .L61+4
 571 02fe 43F00403 		orr	r3, r3, #4
 572 0302 1367     		str	r3, [r2, #112]
 573 0304 784B     		ldr	r3, .L61+4
 574 0306 1B6F     		ldr	r3, [r3, #112]
 575 0308 774A     		ldr	r2, .L61+4
 576 030a 43F00103 		orr	r3, r3, #1
 577 030e 1367     		str	r3, [r2, #112]
 578 0310 0BE0     		b	.L39
 579              	.L40:
 580              		.loc 1 424 5 discriminator 4
 581 0312 754B     		ldr	r3, .L61+4
 582 0314 1B6F     		ldr	r3, [r3, #112]
 583 0316 744A     		ldr	r2, .L61+4
 584 0318 23F00103 		bic	r3, r3, #1
 585 031c 1367     		str	r3, [r2, #112]
 586 031e 724B     		ldr	r3, .L61+4
 587 0320 1B6F     		ldr	r3, [r3, #112]
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 19


 588 0322 714A     		ldr	r2, .L61+4
 589 0324 23F00403 		bic	r3, r3, #4
 590 0328 1367     		str	r3, [r2, #112]
 591              	.L39:
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSE State */
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 592              		.loc 1 426 26 is_stmt 1
 593 032a 7B68     		ldr	r3, [r7, #4]
 594 032c 9B68     		ldr	r3, [r3, #8]
 595              		.loc 1 426 7
 596 032e 002B     		cmp	r3, #0
 597 0330 15D0     		beq	.L41
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 598              		.loc 1 429 19
 599 0332 FFF7FEFF 		bl	HAL_GetTick
 600 0336 3861     		str	r0, [r7, #16]
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 601              		.loc 1 432 12
 602 0338 0AE0     		b	.L42
 603              	.L43:
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 604              		.loc 1 434 13
 605 033a FFF7FEFF 		bl	HAL_GetTick
 606 033e 0246     		mov	r2, r0
 607              		.loc 1 434 27
 608 0340 3B69     		ldr	r3, [r7, #16]
 609 0342 D31A     		subs	r3, r2, r3
 610              		.loc 1 434 11
 611 0344 41F28832 		movw	r2, #5000
 612 0348 9342     		cmp	r3, r2
 613 034a 01D9     		bls	.L42
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 614              		.loc 1 436 18
 615 034c 0323     		movs	r3, #3
 616 034e C5E0     		b	.L5
 617              	.L42:
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 618              		.loc 1 432 13
 619 0350 654B     		ldr	r3, .L61+4
 620 0352 1B6F     		ldr	r3, [r3, #112]
 621 0354 03F00203 		and	r3, r3, #2
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 622              		.loc 1 432 12
 623 0358 002B     		cmp	r3, #0
 624 035a EED0     		beq	.L43
 625 035c 14E0     		b	.L44
 626              	.L41:
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 20


 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick */
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 627              		.loc 1 443 19
 628 035e FFF7FEFF 		bl	HAL_GetTick
 629 0362 3861     		str	r0, [r7, #16]
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 630              		.loc 1 446 12
 631 0364 0AE0     		b	.L45
 632              	.L46:
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 633              		.loc 1 448 13
 634 0366 FFF7FEFF 		bl	HAL_GetTick
 635 036a 0246     		mov	r2, r0
 636              		.loc 1 448 27
 637 036c 3B69     		ldr	r3, [r7, #16]
 638 036e D31A     		subs	r3, r2, r3
 639              		.loc 1 448 11
 640 0370 41F28832 		movw	r2, #5000
 641 0374 9342     		cmp	r3, r2
 642 0376 01D9     		bls	.L45
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 643              		.loc 1 450 18
 644 0378 0323     		movs	r3, #3
 645 037a AFE0     		b	.L5
 646              	.L45:
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 647              		.loc 1 446 13
 648 037c 5A4B     		ldr	r3, .L61+4
 649 037e 1B6F     		ldr	r3, [r3, #112]
 650 0380 03F00203 		and	r3, r3, #2
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 651              		.loc 1 446 12
 652 0384 002B     		cmp	r3, #0
 653 0386 EED1     		bne	.L46
 654              	.L44:
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Restore clock configuration if changed */
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 655              		.loc 1 456 7
 656 0388 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 657 038a 012B     		cmp	r3, #1
 658 038c 05D1     		bne	.L33
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 659              		.loc 1 458 7
 660 038e 564B     		ldr	r3, .L61+4
 661 0390 1B6C     		ldr	r3, [r3, #64]
 662 0392 554A     		ldr	r2, .L61+4
 663 0394 23F08053 		bic	r3, r3, #268435456
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 21


 664 0398 1364     		str	r3, [r2, #64]
 665              	.L33:
 666              	.LBE2:
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 667              		.loc 1 464 30
 668 039a 7B68     		ldr	r3, [r7, #4]
 669 039c 9B69     		ldr	r3, [r3, #24]
 670              		.loc 1 464 6
 671 039e 002B     		cmp	r3, #0
 672 03a0 00F09B80 		beq	.L47
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 673              		.loc 1 467 8
 674 03a4 504B     		ldr	r3, .L61+4
 675 03a6 9B68     		ldr	r3, [r3, #8]
 676 03a8 03F00C03 		and	r3, r3, #12
 677              		.loc 1 467 7
 678 03ac 082B     		cmp	r3, #8
 679 03ae 5CD0     		beq	.L48
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 680              		.loc 1 469 33
 681 03b0 7B68     		ldr	r3, [r7, #4]
 682 03b2 9B69     		ldr	r3, [r3, #24]
 683              		.loc 1 469 9
 684 03b4 022B     		cmp	r3, #2
 685 03b6 41D1     		bne	.L49
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Check the parameters */
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 686              		.loc 1 479 9
 687 03b8 4C4B     		ldr	r3, .L61+8
 688 03ba 0022     		movs	r2, #0
 689 03bc 1A60     		str	r2, [r3]
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 690              		.loc 1 482 21
 691 03be FFF7FEFF 		bl	HAL_GetTick
 692 03c2 3861     		str	r0, [r7, #16]
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 693              		.loc 1 485 14
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 22


 694 03c4 08E0     		b	.L50
 695              	.L51:
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 696              		.loc 1 487 15
 697 03c6 FFF7FEFF 		bl	HAL_GetTick
 698 03ca 0246     		mov	r2, r0
 699              		.loc 1 487 29
 700 03cc 3B69     		ldr	r3, [r7, #16]
 701 03ce D31A     		subs	r3, r2, r3
 702              		.loc 1 487 13
 703 03d0 022B     		cmp	r3, #2
 704 03d2 01D9     		bls	.L50
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 705              		.loc 1 489 20
 706 03d4 0323     		movs	r3, #3
 707 03d6 81E0     		b	.L5
 708              	.L50:
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 709              		.loc 1 485 15
 710 03d8 434B     		ldr	r3, .L61+4
 711 03da 1B68     		ldr	r3, [r3]
 712 03dc 03F00073 		and	r3, r3, #33554432
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 713              		.loc 1 485 14
 714 03e0 002B     		cmp	r3, #0
 715 03e2 F0D1     		bne	.L51
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                  
 716              		.loc 1 494 9
 717 03e4 7B68     		ldr	r3, [r7, #4]
 718 03e6 DA69     		ldr	r2, [r3, #28]
 719 03e8 7B68     		ldr	r3, [r7, #4]
 720 03ea 1B6A     		ldr	r3, [r3, #32]
 721 03ec 1A43     		orrs	r2, r2, r3
 722 03ee 7B68     		ldr	r3, [r7, #4]
 723 03f0 5B6A     		ldr	r3, [r3, #36]
 724 03f2 9B01     		lsls	r3, r3, #6
 725 03f4 1A43     		orrs	r2, r2, r3
 726 03f6 7B68     		ldr	r3, [r7, #4]
 727 03f8 9B6A     		ldr	r3, [r3, #40]
 728 03fa 5B08     		lsrs	r3, r3, #1
 729 03fc 013B     		subs	r3, r3, #1
 730 03fe 1B04     		lsls	r3, r3, #16
 731 0400 1A43     		orrs	r2, r2, r3
 732 0402 7B68     		ldr	r3, [r7, #4]
 733 0404 DB6A     		ldr	r3, [r3, #44]
 734 0406 1B06     		lsls	r3, r3, #24
 735 0408 3749     		ldr	r1, .L61+4
 736 040a 1343     		orrs	r3, r3, r2
 737 040c 4B60     		str	r3, [r1, #4]
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLM                                       
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 23


 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Po
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the main PLL. */
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 738              		.loc 1 500 9
 739 040e 374B     		ldr	r3, .L61+8
 740 0410 0122     		movs	r2, #1
 741 0412 1A60     		str	r2, [r3]
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 742              		.loc 1 503 21
 743 0414 FFF7FEFF 		bl	HAL_GetTick
 744 0418 3861     		str	r0, [r7, #16]
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 745              		.loc 1 506 14
 746 041a 08E0     		b	.L52
 747              	.L53:
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 748              		.loc 1 508 15
 749 041c FFF7FEFF 		bl	HAL_GetTick
 750 0420 0246     		mov	r2, r0
 751              		.loc 1 508 29
 752 0422 3B69     		ldr	r3, [r7, #16]
 753 0424 D31A     		subs	r3, r2, r3
 754              		.loc 1 508 13
 755 0426 022B     		cmp	r3, #2
 756 0428 01D9     		bls	.L52
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 757              		.loc 1 510 20
 758 042a 0323     		movs	r3, #3
 759 042c 56E0     		b	.L5
 760              	.L52:
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 761              		.loc 1 506 15
 762 042e 2E4B     		ldr	r3, .L61+4
 763 0430 1B68     		ldr	r3, [r3]
 764 0432 03F00073 		and	r3, r3, #33554432
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 765              		.loc 1 506 14
 766 0436 002B     		cmp	r3, #0
 767 0438 F0D0     		beq	.L53
 768 043a 4EE0     		b	.L47
 769              	.L49:
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 770              		.loc 1 517 9
 771 043c 2B4B     		ldr	r3, .L61+8
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 24


 772 043e 0022     		movs	r2, #0
 773 0440 1A60     		str	r2, [r3]
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 774              		.loc 1 520 21
 775 0442 FFF7FEFF 		bl	HAL_GetTick
 776 0446 3861     		str	r0, [r7, #16]
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 777              		.loc 1 523 14
 778 0448 08E0     		b	.L54
 779              	.L55:
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 780              		.loc 1 525 15
 781 044a FFF7FEFF 		bl	HAL_GetTick
 782 044e 0246     		mov	r2, r0
 783              		.loc 1 525 29
 784 0450 3B69     		ldr	r3, [r7, #16]
 785 0452 D31A     		subs	r3, r2, r3
 786              		.loc 1 525 13
 787 0454 022B     		cmp	r3, #2
 788 0456 01D9     		bls	.L54
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 789              		.loc 1 527 20
 790 0458 0323     		movs	r3, #3
 791 045a 3FE0     		b	.L5
 792              	.L54:
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 793              		.loc 1 523 15
 794 045c 224B     		ldr	r3, .L61+4
 795 045e 1B68     		ldr	r3, [r3]
 796 0460 03F00073 		and	r3, r3, #33554432
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 797              		.loc 1 523 14
 798 0464 002B     		cmp	r3, #0
 799 0466 F0D1     		bne	.L55
 800 0468 37E0     		b	.L47
 801              	.L48:
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check if there is a request to disable the PLL used as System clock source */
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 802              		.loc 1 535 33
 803 046a 7B68     		ldr	r3, [r7, #4]
 804 046c 9B69     		ldr	r3, [r3, #24]
 805              		.loc 1 535 9
 806 046e 012B     		cmp	r3, #1
 807 0470 01D1     		bne	.L56
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 25


 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 808              		.loc 1 537 16
 809 0472 0123     		movs	r3, #1
 810 0474 32E0     		b	.L5
 811              	.L56:
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Do not return HAL_ERROR if request repeats the current configuration */
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pll_config = RCC->PLLCFGR;
 812              		.loc 1 542 25
 813 0476 1C4B     		ldr	r3, .L61+4
 814              		.loc 1 542 20
 815 0478 5B68     		ldr	r3, [r3, #4]
 816 047a FB60     		str	r3, [r7, #12]
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined (RCC_PLLCFGR_PLLR)
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U))
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #else
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 817              		.loc 1 552 37
 818 047c 7B68     		ldr	r3, [r7, #4]
 819 047e 9B69     		ldr	r3, [r3, #24]
 820              		.loc 1 552 12
 821 0480 012B     		cmp	r3, #1
 822 0482 28D0     		beq	.L57
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 823              		.loc 1 553 14 discriminator 1
 824 0484 FB68     		ldr	r3, [r7, #12]
 825 0486 03F48002 		and	r2, r3, #4194304
 826              		.loc 1 553 80 discriminator 1
 827 048a 7B68     		ldr	r3, [r7, #4]
 828 048c DB69     		ldr	r3, [r3, #28]
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 829              		.loc 1 552 64 discriminator 1
 830 048e 9A42     		cmp	r2, r3
 831 0490 21D1     		bne	.L57
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR
 832              		.loc 1 554 14
 833 0492 FB68     		ldr	r3, [r7, #12]
 834 0494 03F03F02 		and	r2, r3, #63
 835              		.loc 1 554 86
 836 0498 7B68     		ldr	r3, [r7, #4]
 837 049a 1B6A     		ldr	r3, [r3, #32]
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 838              		.loc 1 553 92
 839 049c 9A42     		cmp	r2, r3
 840 049e 1AD1     		bne	.L57
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR
 841              		.loc 1 555 14
 842 04a0 FA68     		ldr	r2, [r7, #12]
 843 04a2 47F6C073 		movw	r3, #32704
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 26


 844 04a6 1340     		ands	r3, r3, r2
 845              		.loc 1 555 79
 846 04a8 7A68     		ldr	r2, [r7, #4]
 847 04aa 526A     		ldr	r2, [r2, #36]
 848              		.loc 1 555 86
 849 04ac 9201     		lsls	r2, r2, #6
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR
 850              		.loc 1 554 111
 851 04ae 9342     		cmp	r3, r2
 852 04b0 11D1     		bne	.L57
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U))
 853              		.loc 1 556 14
 854 04b2 FB68     		ldr	r3, [r7, #12]
 855 04b4 03F44032 		and	r2, r3, #196608
 856              		.loc 1 556 81
 857 04b8 7B68     		ldr	r3, [r7, #4]
 858 04ba 9B6A     		ldr	r3, [r3, #40]
 859              		.loc 1 556 87
 860 04bc 5B08     		lsrs	r3, r3, #1
 861              		.loc 1 556 94
 862 04be 013B     		subs	r3, r3, #1
 863              		.loc 1 556 101
 864 04c0 1B04     		lsls	r3, r3, #16
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR
 865              		.loc 1 555 111
 866 04c2 9A42     		cmp	r2, r3
 867 04c4 07D1     		bne	.L57
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_
 868              		.loc 1 557 14
 869 04c6 FB68     		ldr	r3, [r7, #12]
 870 04c8 03F07062 		and	r2, r3, #251658240
 871              		.loc 1 557 79
 872 04cc 7B68     		ldr	r3, [r7, #4]
 873 04ce DB6A     		ldr	r3, [r3, #44]
 874              		.loc 1 557 85
 875 04d0 1B06     		lsls	r3, r3, #24
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U))
 876              		.loc 1 556 126
 877 04d2 9A42     		cmp	r2, r3
 878 04d4 01D0     		beq	.L47
 879              	.L57:
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_ERROR;
 880              		.loc 1 560 18
 881 04d6 0123     		movs	r3, #1
 882 04d8 00E0     		b	.L5
 883              	.L47:
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 884              		.loc 1 565 10
 885 04da 0023     		movs	r3, #0
 886              	.L5:
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 27


 887              		.loc 1 566 1
 888 04dc 1846     		mov	r0, r3
 889 04de 1837     		adds	r7, r7, #24
 890              	.LCFI7:
 891              		.cfi_def_cfa_offset 8
 892 04e0 BD46     		mov	sp, r7
 893              	.LCFI8:
 894              		.cfi_def_cfa_register 13
 895              		@ sp needed
 896 04e2 80BD     		pop	{r7, pc}
 897              	.L62:
 898              		.align	2
 899              	.L61:
 900 04e4 00700040 		.word	1073770496
 901 04e8 00380240 		.word	1073887232
 902 04ec 60004742 		.word	1111949408
 903              		.cfi_endproc
 904              	.LFE131:
 906              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 907              		.align	1
 908              		.global	HAL_RCC_ClockConfig
 909              		.syntax unified
 910              		.thumb
 911              		.thumb_func
 912              		.fpu fpv4-sp-d16
 914              	HAL_RCC_ClockConfig:
 915              	.LFB132:
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB busses clocks according to the specified
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  FLatency FLASH Latency, this parameter depend on device selected
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         occur when the clock source will be ready.
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 916              		.loc 1 594 1
 917              		.cfi_startproc
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 28


 918              		@ args = 0, pretend = 0, frame = 16
 919              		@ frame_needed = 1, uses_anonymous_args = 0
 920 0000 80B5     		push	{r7, lr}
 921              	.LCFI9:
 922              		.cfi_def_cfa_offset 8
 923              		.cfi_offset 7, -8
 924              		.cfi_offset 14, -4
 925 0002 84B0     		sub	sp, sp, #16
 926              	.LCFI10:
 927              		.cfi_def_cfa_offset 24
 928 0004 00AF     		add	r7, sp, #0
 929              	.LCFI11:
 930              		.cfi_def_cfa_register 7
 931 0006 7860     		str	r0, [r7, #4]
 932 0008 3960     		str	r1, [r7]
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t tickstart;
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check Null pointer */
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 933              		.loc 1 598 5
 934 000a 7B68     		ldr	r3, [r7, #4]
 935 000c 002B     		cmp	r3, #0
 936 000e 01D1     		bne	.L64
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     return HAL_ERROR;
 937              		.loc 1 600 12
 938 0010 0123     		movs	r3, #1
 939 0012 CCE0     		b	.L65
 940              	.L64:
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 941              		.loc 1 612 17
 942 0014 684B     		ldr	r3, .L81
 943 0016 1B68     		ldr	r3, [r3]
 944 0018 03F00703 		and	r3, r3, #7
 945              		.loc 1 612 5
 946 001c 3A68     		ldr	r2, [r7]
 947 001e 9A42     		cmp	r2, r3
 948 0020 0CD9     		bls	.L66
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 949              		.loc 1 615 5
 950 0022 654B     		ldr	r3, .L81
 951 0024 3A68     		ldr	r2, [r7]
 952 0026 D2B2     		uxtb	r2, r2
 953 0028 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 29


 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 954              		.loc 1 619 8
 955 002a 634B     		ldr	r3, .L81
 956 002c 1B68     		ldr	r3, [r3]
 957 002e 03F00703 		and	r3, r3, #7
 958              		.loc 1 619 7
 959 0032 3A68     		ldr	r2, [r7]
 960 0034 9A42     		cmp	r2, r3
 961 0036 01D0     		beq	.L66
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 962              		.loc 1 621 14
 963 0038 0123     		movs	r3, #1
 964 003a B8E0     		b	.L65
 965              	.L66:
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 966              		.loc 1 626 25
 967 003c 7B68     		ldr	r3, [r7, #4]
 968 003e 1B68     		ldr	r3, [r3]
 969              		.loc 1 626 38
 970 0040 03F00203 		and	r3, r3, #2
 971              		.loc 1 626 5
 972 0044 002B     		cmp	r3, #0
 973 0046 20D0     		beq	.L67
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Set the highest APBx dividers in order to ensure that we do not go through
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        a non-spec phase whatever we decrease or increase HCLK. */
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 974              		.loc 1 630 27
 975 0048 7B68     		ldr	r3, [r7, #4]
 976 004a 1B68     		ldr	r3, [r3]
 977              		.loc 1 630 40
 978 004c 03F00403 		and	r3, r3, #4
 979              		.loc 1 630 7
 980 0050 002B     		cmp	r3, #0
 981 0052 05D0     		beq	.L68
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 982              		.loc 1 632 7
 983 0054 594B     		ldr	r3, .L81+4
 984 0056 9B68     		ldr	r3, [r3, #8]
 985 0058 584A     		ldr	r2, .L81+4
 986 005a 43F4E053 		orr	r3, r3, #7168
 987 005e 9360     		str	r3, [r2, #8]
 988              	.L68:
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 989              		.loc 1 635 27
 990 0060 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 30


 991 0062 1B68     		ldr	r3, [r3]
 992              		.loc 1 635 40
 993 0064 03F00803 		and	r3, r3, #8
 994              		.loc 1 635 7
 995 0068 002B     		cmp	r3, #0
 996 006a 05D0     		beq	.L69
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 997              		.loc 1 637 7
 998 006c 534B     		ldr	r3, .L81+4
 999 006e 9B68     		ldr	r3, [r3, #8]
 1000 0070 524A     		ldr	r2, .L81+4
 1001 0072 43F46043 		orr	r3, r3, #57344
 1002 0076 9360     		str	r3, [r2, #8]
 1003              	.L69:
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1004              		.loc 1 641 5
 1005 0078 504B     		ldr	r3, .L81+4
 1006 007a 9B68     		ldr	r3, [r3, #8]
 1007 007c 23F0F002 		bic	r2, r3, #240
 1008 0080 7B68     		ldr	r3, [r7, #4]
 1009 0082 9B68     		ldr	r3, [r3, #8]
 1010 0084 4D49     		ldr	r1, .L81+4
 1011 0086 1343     		orrs	r3, r3, r2
 1012 0088 8B60     		str	r3, [r1, #8]
 1013              	.L67:
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1014              		.loc 1 645 25
 1015 008a 7B68     		ldr	r3, [r7, #4]
 1016 008c 1B68     		ldr	r3, [r3]
 1017              		.loc 1 645 38
 1018 008e 03F00103 		and	r3, r3, #1
 1019              		.loc 1 645 5
 1020 0092 002B     		cmp	r3, #0
 1021 0094 44D0     		beq	.L70
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1022              		.loc 1 650 25
 1023 0096 7B68     		ldr	r3, [r7, #4]
 1024 0098 5B68     		ldr	r3, [r3, #4]
 1025              		.loc 1 650 7
 1026 009a 012B     		cmp	r3, #1
 1027 009c 07D1     		bne	.L71
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSE ready flag */
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 1028              		.loc 1 653 10
 1029 009e 474B     		ldr	r3, .L81+4
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 31


 1030 00a0 1B68     		ldr	r3, [r3]
 1031 00a2 03F40033 		and	r3, r3, #131072
 1032              		.loc 1 653 9
 1033 00a6 002B     		cmp	r3, #0
 1034 00a8 19D1     		bne	.L72
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 1035              		.loc 1 655 16
 1036 00aa 0123     		movs	r3, #1
 1037 00ac 7FE0     		b	.L65
 1038              	.L71:
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 1039              		.loc 1 659 31
 1040 00ae 7B68     		ldr	r3, [r7, #4]
 1041 00b0 5B68     		ldr	r3, [r3, #4]
 1042              		.loc 1 659 12
 1043 00b2 022B     		cmp	r3, #2
 1044 00b4 03D0     		beq	.L73
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1045              		.loc 1 660 31 discriminator 1
 1046 00b6 7B68     		ldr	r3, [r7, #4]
 1047 00b8 5B68     		ldr	r3, [r3, #4]
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 1048              		.loc 1 659 76 discriminator 1
 1049 00ba 032B     		cmp	r3, #3
 1050 00bc 07D1     		bne	.L74
 1051              	.L73:
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the PLL ready flag */
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 1052              		.loc 1 663 10
 1053 00be 3F4B     		ldr	r3, .L81+4
 1054 00c0 1B68     		ldr	r3, [r3]
 1055 00c2 03F00073 		and	r3, r3, #33554432
 1056              		.loc 1 663 9
 1057 00c6 002B     		cmp	r3, #0
 1058 00c8 09D1     		bne	.L72
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 1059              		.loc 1 665 16
 1060 00ca 0123     		movs	r3, #1
 1061 00cc 6FE0     		b	.L65
 1062              	.L74:
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSI ready flag */
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 1063              		.loc 1 672 10
 1064 00ce 3B4B     		ldr	r3, .L81+4
 1065 00d0 1B68     		ldr	r3, [r3]
 1066 00d2 03F00203 		and	r3, r3, #2
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 32


 1067              		.loc 1 672 9
 1068 00d6 002B     		cmp	r3, #0
 1069 00d8 01D1     		bne	.L72
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 1070              		.loc 1 674 16
 1071 00da 0123     		movs	r3, #1
 1072 00dc 67E0     		b	.L65
 1073              	.L72:
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 1074              		.loc 1 678 5
 1075 00de 374B     		ldr	r3, .L81+4
 1076 00e0 9B68     		ldr	r3, [r3, #8]
 1077 00e2 23F00302 		bic	r2, r3, #3
 1078 00e6 7B68     		ldr	r3, [r7, #4]
 1079 00e8 5B68     		ldr	r3, [r3, #4]
 1080 00ea 3449     		ldr	r1, .L81+4
 1081 00ec 1343     		orrs	r3, r3, r2
 1082 00ee 8B60     		str	r3, [r1, #8]
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Get Start Tick */
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1083              		.loc 1 681 17
 1084 00f0 FFF7FEFF 		bl	HAL_GetTick
 1085 00f4 F860     		str	r0, [r7, #12]
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 1086              		.loc 1 683 11
 1087 00f6 0AE0     		b	.L76
 1088              	.L77:
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 1089              		.loc 1 685 12
 1090 00f8 FFF7FEFF 		bl	HAL_GetTick
 1091 00fc 0246     		mov	r2, r0
 1092              		.loc 1 685 26
 1093 00fe FB68     		ldr	r3, [r7, #12]
 1094 0100 D31A     		subs	r3, r2, r3
 1095              		.loc 1 685 10
 1096 0102 41F28832 		movw	r2, #5000
 1097 0106 9342     		cmp	r3, r2
 1098 0108 01D9     		bls	.L76
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1099              		.loc 1 687 16
 1100 010a 0323     		movs	r3, #3
 1101 010c 4FE0     		b	.L65
 1102              	.L76:
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1103              		.loc 1 683 12
 1104 010e 2B4B     		ldr	r3, .L81+4
 1105 0110 9B68     		ldr	r3, [r3, #8]
 1106 0112 03F00C02 		and	r2, r3, #12
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 33


 1107              		.loc 1 683 63
 1108 0116 7B68     		ldr	r3, [r7, #4]
 1109 0118 5B68     		ldr	r3, [r3, #4]
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1110              		.loc 1 683 78
 1111 011a 9B00     		lsls	r3, r3, #2
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 1112              		.loc 1 683 11
 1113 011c 9A42     		cmp	r2, r3
 1114 011e EBD1     		bne	.L77
 1115              	.L70:
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 1116              		.loc 1 693 17
 1117 0120 254B     		ldr	r3, .L81
 1118 0122 1B68     		ldr	r3, [r3]
 1119 0124 03F00703 		and	r3, r3, #7
 1120              		.loc 1 693 5
 1121 0128 3A68     		ldr	r2, [r7]
 1122 012a 9A42     		cmp	r2, r3
 1123 012c 0CD2     		bcs	.L78
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****      /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1124              		.loc 1 696 5
 1125 012e 224B     		ldr	r3, .L81
 1126 0130 3A68     		ldr	r2, [r7]
 1127 0132 D2B2     		uxtb	r2, r2
 1128 0134 1A70     		strb	r2, [r3]
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1129              		.loc 1 700 8
 1130 0136 204B     		ldr	r3, .L81
 1131 0138 1B68     		ldr	r3, [r3]
 1132 013a 03F00703 		and	r3, r3, #7
 1133              		.loc 1 700 7
 1134 013e 3A68     		ldr	r2, [r7]
 1135 0140 9A42     		cmp	r2, r3
 1136 0142 01D0     		beq	.L78
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 1137              		.loc 1 702 14
 1138 0144 0123     		movs	r3, #1
 1139 0146 32E0     		b	.L65
 1140              	.L78:
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1141              		.loc 1 707 25
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 34


 1142 0148 7B68     		ldr	r3, [r7, #4]
 1143 014a 1B68     		ldr	r3, [r3]
 1144              		.loc 1 707 38
 1145 014c 03F00403 		and	r3, r3, #4
 1146              		.loc 1 707 5
 1147 0150 002B     		cmp	r3, #0
 1148 0152 08D0     		beq	.L79
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1149              		.loc 1 710 5
 1150 0154 194B     		ldr	r3, .L81+4
 1151 0156 9B68     		ldr	r3, [r3, #8]
 1152 0158 23F4E052 		bic	r2, r3, #7168
 1153 015c 7B68     		ldr	r3, [r7, #4]
 1154 015e DB68     		ldr	r3, [r3, #12]
 1155 0160 1649     		ldr	r1, .L81+4
 1156 0162 1343     		orrs	r3, r3, r2
 1157 0164 8B60     		str	r3, [r1, #8]
 1158              	.L79:
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1159              		.loc 1 714 25
 1160 0166 7B68     		ldr	r3, [r7, #4]
 1161 0168 1B68     		ldr	r3, [r3]
 1162              		.loc 1 714 38
 1163 016a 03F00803 		and	r3, r3, #8
 1164              		.loc 1 714 5
 1165 016e 002B     		cmp	r3, #0
 1166 0170 09D0     		beq	.L80
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 1167              		.loc 1 717 5
 1168 0172 124B     		ldr	r3, .L81+4
 1169 0174 9B68     		ldr	r3, [r3, #8]
 1170 0176 23F46042 		bic	r2, r3, #57344
 1171 017a 7B68     		ldr	r3, [r7, #4]
 1172 017c 1B69     		ldr	r3, [r3, #16]
 1173 017e DB00     		lsls	r3, r3, #3
 1174 0180 0E49     		ldr	r1, .L81+4
 1175 0182 1343     		orrs	r3, r3, r2
 1176 0184 8B60     		str	r3, [r1, #8]
 1177              	.L80:
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 1178              		.loc 1 721 21
 1179 0186 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1180 018a 0246     		mov	r2, r0
 1181              		.loc 1 721 68
 1182 018c 0B4B     		ldr	r3, .L81+4
 1183 018e 9B68     		ldr	r3, [r3, #8]
 1184              		.loc 1 721 91
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 35


 1185 0190 1B09     		lsrs	r3, r3, #4
 1186 0192 03F00F03 		and	r3, r3, #15
 1187              		.loc 1 721 63
 1188 0196 0A49     		ldr	r1, .L81+8
 1189 0198 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1190              		.loc 1 721 47
 1191 019a 22FA03F3 		lsr	r3, r2, r3
 1192              		.loc 1 721 19
 1193 019e 094A     		ldr	r2, .L81+12
 1194 01a0 1360     		str	r3, [r2]
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings */
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   HAL_InitTick (uwTickPrio);
 1195              		.loc 1 724 3
 1196 01a2 094B     		ldr	r3, .L81+16
 1197 01a4 1B68     		ldr	r3, [r3]
 1198 01a6 1846     		mov	r0, r3
 1199 01a8 FFF7FEFF 		bl	HAL_InitTick
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 1200              		.loc 1 726 10
 1201 01ac 0023     		movs	r3, #0
 1202              	.L65:
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1203              		.loc 1 727 1
 1204 01ae 1846     		mov	r0, r3
 1205 01b0 1037     		adds	r7, r7, #16
 1206              	.LCFI12:
 1207              		.cfi_def_cfa_offset 8
 1208 01b2 BD46     		mov	sp, r7
 1209              	.LCFI13:
 1210              		.cfi_def_cfa_register 13
 1211              		@ sp needed
 1212 01b4 80BD     		pop	{r7, pc}
 1213              	.L82:
 1214 01b6 00BF     		.align	2
 1215              	.L81:
 1216 01b8 003C0240 		.word	1073888256
 1217 01bc 00380240 		.word	1073887232
 1218 01c0 00000000 		.word	AHBPrescTable
 1219 01c4 00000000 		.word	SystemCoreClock
 1220 01c8 00000000 		.word	uwTickPrio
 1221              		.cfi_endproc
 1222              	.LFE132:
 1224              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1225              		.align	1
 1226              		.global	HAL_RCC_MCOConfig
 1227              		.syntax unified
 1228              		.thumb
 1229              		.thumb_func
 1230              		.fpu fpv4-sp-d16
 1232              	HAL_RCC_MCOConfig:
 1233              	.LFB133:
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 36


 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     frequencies.
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8) or on MCO2 pin(PC9).
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   PA8/PC9 should be configured in alternate function mode.
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1: Clock source to output on MCO1 pin(PA8).
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2: Clock source to output on MCO2 pin(PC9).
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI: HSI clock selected as MCO1 source
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_LSE: LSE clock selected as MCO1 source
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSE: HSE clock selected as MCO1 source
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_PLLCLK: main PLL clock selected as MCO1 source
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_SYSCLK: System clock (SYSCLK) selected as MCO2 source
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLI2SCLK: PLLI2S clock selected as MCO2 source, available for a
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_I2SCLK: I2SCLK clock selected as MCO2 source, available only for
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_HSE: HSE clock selected as MCO2 source
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLCLK: main PLL clock selected as MCO2 source
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCOx prescaler.
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_1: no division applied to MCOx clock
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_2: division by 2 applied to MCOx clock
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_3: division by 3 applied to MCOx clock
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_4: division by 4 applied to MCOx clock
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_5: division by 5 applied to MCOx clock
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note  For STM32F410Rx devices to output I2SCLK clock on MCO2 you should have
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *        at last one of the SPI clocks enabled (SPI1, SPI2 or SPI5).
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1234              		.loc 1 778 1
 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 48
 1237              		@ frame_needed = 1, uses_anonymous_args = 0
 1238 0000 80B5     		push	{r7, lr}
 1239              	.LCFI14:
 1240              		.cfi_def_cfa_offset 8
 1241              		.cfi_offset 7, -8
 1242              		.cfi_offset 14, -4
 1243 0002 8CB0     		sub	sp, sp, #48
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 37


 1244              	.LCFI15:
 1245              		.cfi_def_cfa_offset 56
 1246 0004 00AF     		add	r7, sp, #0
 1247              	.LCFI16:
 1248              		.cfi_def_cfa_register 7
 1249 0006 F860     		str	r0, [r7, #12]
 1250 0008 B960     		str	r1, [r7, #8]
 1251 000a 7A60     		str	r2, [r7, #4]
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* RCC_MCO1 */
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_MCOx == RCC_MCO1)
 1252              		.loc 1 784 5
 1253 000c FB68     		ldr	r3, [r7, #12]
 1254 000e 002B     		cmp	r3, #0
 1255 0010 29D1     		bne	.L84
 1256              	.LBB4:
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO1 Clock Enable */
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO1_CLK_ENABLE();
 1257              		.loc 1 789 5
 1258 0012 0023     		movs	r3, #0
 1259 0014 BB61     		str	r3, [r7, #24]
 1260 0016 2B4B     		ldr	r3, .L87
 1261 0018 1B6B     		ldr	r3, [r3, #48]
 1262 001a 2A4A     		ldr	r2, .L87
 1263 001c 43F00103 		orr	r3, r3, #1
 1264 0020 1363     		str	r3, [r2, #48]
 1265 0022 284B     		ldr	r3, .L87
 1266 0024 1B6B     		ldr	r3, [r3, #48]
 1267 0026 03F00103 		and	r3, r3, #1
 1268 002a BB61     		str	r3, [r7, #24]
 1269 002c BB69     		ldr	r3, [r7, #24]
 1270              	.LBE4:
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO1 pin in alternate function mode */
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO1_PIN;
 1271              		.loc 1 792 25
 1272 002e 4FF48073 		mov	r3, #256
 1273 0032 FB61     		str	r3, [r7, #28]
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1274              		.loc 1 793 26
 1275 0034 0223     		movs	r3, #2
 1276 0036 3B62     		str	r3, [r7, #32]
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1277              		.loc 1 794 27
 1278 0038 0323     		movs	r3, #3
 1279 003a BB62     		str	r3, [r7, #40]
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1280              		.loc 1 795 26
 1281 003c 0023     		movs	r3, #0
 1282 003e 7B62     		str	r3, [r7, #36]
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 38


 1283              		.loc 1 796 31
 1284 0040 0023     		movs	r3, #0
 1285 0042 FB62     		str	r3, [r7, #44]
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 1286              		.loc 1 797 5
 1287 0044 07F11C03 		add	r3, r7, #28
 1288 0048 1946     		mov	r1, r3
 1289 004a 1F48     		ldr	r0, .L87+4
 1290 004c FFF7FEFF 		bl	HAL_GPIO_Init
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO1 and MCO1PRE[2:0] bits then Select MCO1 clock source and prescaler */
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
 1291              		.loc 1 800 5
 1292 0050 1C4B     		ldr	r3, .L87
 1293 0052 9B68     		ldr	r3, [r3, #8]
 1294 0054 23F0EC62 		bic	r2, r3, #123731968
 1295 0058 B968     		ldr	r1, [r7, #8]
 1296 005a 7B68     		ldr	r3, [r7, #4]
 1297 005c 0B43     		orrs	r3, r3, r1
 1298 005e 1949     		ldr	r1, .L87
 1299 0060 1343     		orrs	r3, r3, r2
 1300 0062 8B60     		str	r3, [r1, #8]
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    /* This RCC MCO1 enable feature is available only on STM32F410xx devices */
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO1EN)
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO1_ENABLE();
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO1EN */
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO2)
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO2SOURCE(RCC_MCOSource));
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO2 Clock Enable */
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO2_CLK_ENABLE();
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO2 pin in alternate function mode */
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO2_PIN;
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO2 and MCO2PRE[2:0] bits then Select MCO2 clock source and prescaler */
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 3U)))
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    /* This RCC MCO2 enable feature is available only on STM32F410Rx devices */
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO2EN)
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO2_ENABLE();
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO2EN */
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO2 */
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1301              		.loc 1 832 1
 1302 0064 29E0     		b	.L86
 1303              	.L84:
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 39


 1304              	.LBB5:
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1305              		.loc 1 813 5
 1306 0066 0023     		movs	r3, #0
 1307 0068 7B61     		str	r3, [r7, #20]
 1308 006a 164B     		ldr	r3, .L87
 1309 006c 1B6B     		ldr	r3, [r3, #48]
 1310 006e 154A     		ldr	r2, .L87
 1311 0070 43F00403 		orr	r3, r3, #4
 1312 0074 1363     		str	r3, [r2, #48]
 1313 0076 134B     		ldr	r3, .L87
 1314 0078 1B6B     		ldr	r3, [r3, #48]
 1315 007a 03F00403 		and	r3, r3, #4
 1316 007e 7B61     		str	r3, [r7, #20]
 1317 0080 7B69     		ldr	r3, [r7, #20]
 1318              	.LBE5:
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1319              		.loc 1 816 25
 1320 0082 4FF40073 		mov	r3, #512
 1321 0086 FB61     		str	r3, [r7, #28]
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1322              		.loc 1 817 26
 1323 0088 0223     		movs	r3, #2
 1324 008a 3B62     		str	r3, [r7, #32]
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1325              		.loc 1 818 27
 1326 008c 0323     		movs	r3, #3
 1327 008e BB62     		str	r3, [r7, #40]
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1328              		.loc 1 819 26
 1329 0090 0023     		movs	r3, #0
 1330 0092 7B62     		str	r3, [r7, #36]
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 1331              		.loc 1 820 31
 1332 0094 0023     		movs	r3, #0
 1333 0096 FB62     		str	r3, [r7, #44]
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1334              		.loc 1 821 5
 1335 0098 07F11C03 		add	r3, r7, #28
 1336 009c 1946     		mov	r1, r3
 1337 009e 0B48     		ldr	r0, .L87+8
 1338 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1339              		.loc 1 824 5
 1340 00a4 074B     		ldr	r3, .L87
 1341 00a6 9B68     		ldr	r3, [r3, #8]
 1342 00a8 23F07842 		bic	r2, r3, #-134217728
 1343 00ac 7B68     		ldr	r3, [r7, #4]
 1344 00ae D900     		lsls	r1, r3, #3
 1345 00b0 BB68     		ldr	r3, [r7, #8]
 1346 00b2 0B43     		orrs	r3, r3, r1
 1347 00b4 0349     		ldr	r1, .L87
 1348 00b6 1343     		orrs	r3, r3, r2
 1349 00b8 8B60     		str	r3, [r1, #8]
 1350              	.L86:
 1351              		.loc 1 832 1
 1352 00ba 00BF     		nop
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 40


 1353 00bc 3037     		adds	r7, r7, #48
 1354              	.LCFI17:
 1355              		.cfi_def_cfa_offset 8
 1356 00be BD46     		mov	sp, r7
 1357              	.LCFI18:
 1358              		.cfi_def_cfa_register 13
 1359              		@ sp needed
 1360 00c0 80BD     		pop	{r7, pc}
 1361              	.L88:
 1362 00c2 00BF     		.align	2
 1363              	.L87:
 1364 00c4 00380240 		.word	1073887232
 1365 00c8 00000240 		.word	1073872896
 1366 00cc 00080240 		.word	1073874944
 1367              		.cfi_endproc
 1368              	.LFE133:
 1370              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1371              		.align	1
 1372              		.global	HAL_RCC_EnableCSS
 1373              		.syntax unified
 1374              		.thumb
 1375              		.thumb_func
 1376              		.fpu fpv4-sp-d16
 1378              	HAL_RCC_EnableCSS:
 1379              	.LFB134:
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1380              		.loc 1 844 1
 1381              		.cfi_startproc
 1382              		@ args = 0, pretend = 0, frame = 0
 1383              		@ frame_needed = 1, uses_anonymous_args = 0
 1384              		@ link register save eliminated.
 1385 0000 80B4     		push	{r7}
 1386              	.LCFI19:
 1387              		.cfi_def_cfa_offset 4
 1388              		.cfi_offset 7, -4
 1389 0002 00AF     		add	r7, sp, #0
 1390              	.LCFI20:
 1391              		.cfi_def_cfa_register 7
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1392              		.loc 1 845 3
 1393 0004 034B     		ldr	r3, .L90
 1394              		.loc 1 845 38
 1395 0006 0122     		movs	r2, #1
 1396 0008 1A60     		str	r2, [r3]
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1397              		.loc 1 846 1
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 41


 1398 000a 00BF     		nop
 1399 000c BD46     		mov	sp, r7
 1400              	.LCFI21:
 1401              		.cfi_def_cfa_register 13
 1402              		@ sp needed
 1403 000e 5DF8047B 		ldr	r7, [sp], #4
 1404              	.LCFI22:
 1405              		.cfi_restore 7
 1406              		.cfi_def_cfa_offset 0
 1407 0012 7047     		bx	lr
 1408              	.L91:
 1409              		.align	2
 1410              	.L90:
 1411 0014 4C004742 		.word	1111949388
 1412              		.cfi_endproc
 1413              	.LFE134:
 1415              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1416              		.align	1
 1417              		.global	HAL_RCC_DisableCSS
 1418              		.syntax unified
 1419              		.thumb
 1420              		.thumb_func
 1421              		.fpu fpv4-sp-d16
 1423              	HAL_RCC_DisableCSS:
 1424              	.LFB135:
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1425              		.loc 1 853 1
 1426              		.cfi_startproc
 1427              		@ args = 0, pretend = 0, frame = 0
 1428              		@ frame_needed = 1, uses_anonymous_args = 0
 1429              		@ link register save eliminated.
 1430 0000 80B4     		push	{r7}
 1431              	.LCFI23:
 1432              		.cfi_def_cfa_offset 4
 1433              		.cfi_offset 7, -4
 1434 0002 00AF     		add	r7, sp, #0
 1435              	.LCFI24:
 1436              		.cfi_def_cfa_register 7
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1437              		.loc 1 854 3
 1438 0004 034B     		ldr	r3, .L93
 1439              		.loc 1 854 38
 1440 0006 0022     		movs	r2, #0
 1441 0008 1A60     		str	r2, [r3]
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1442              		.loc 1 855 1
 1443 000a 00BF     		nop
 1444 000c BD46     		mov	sp, r7
 1445              	.LCFI25:
 1446              		.cfi_def_cfa_register 13
 1447              		@ sp needed
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 42


 1448 000e 5DF8047B 		ldr	r7, [sp], #4
 1449              	.LCFI26:
 1450              		.cfi_restore 7
 1451              		.cfi_def_cfa_offset 0
 1452 0012 7047     		bx	lr
 1453              	.L94:
 1454              		.align	2
 1455              	.L93:
 1456 0014 4C004742 		.word	1111949388
 1457              		.cfi_endproc
 1458              	.LFE135:
 1460              		.global	__aeabi_uldivmod
 1461              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1462              		.align	1
 1463              		.weak	HAL_RCC_GetSysClockFreq
 1464              		.syntax unified
 1465              		.thumb
 1466              		.thumb_func
 1467              		.fpu fpv4-sp-d16
 1469              	HAL_RCC_GetSysClockFreq:
 1470              	.LFB136:
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         constant and the selected clock source:
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**)
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               in voltage and temperature.
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                have wrong result.
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         value for HSE crystal.
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval SYSCLK frequency
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak uint32_t HAL_RCC_GetSysClockFreq(void)
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1471              		.loc 1 888 1
 1472              		.cfi_startproc
 1473              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 43


 1474              		@ frame_needed = 1, uses_anonymous_args = 0
 1475 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 1476              	.LCFI27:
 1477              		.cfi_def_cfa_offset 24
 1478              		.cfi_offset 4, -24
 1479              		.cfi_offset 5, -20
 1480              		.cfi_offset 7, -16
 1481              		.cfi_offset 8, -12
 1482              		.cfi_offset 9, -8
 1483              		.cfi_offset 14, -4
 1484 0004 84B0     		sub	sp, sp, #16
 1485              	.LCFI28:
 1486              		.cfi_def_cfa_offset 40
 1487 0006 00AF     		add	r7, sp, #0
 1488              	.LCFI29:
 1489              		.cfi_def_cfa_register 7
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 1490              		.loc 1 889 12
 1491 0008 0023     		movs	r3, #0
 1492 000a 7B60     		str	r3, [r7, #4]
 1493              		.loc 1 889 23
 1494 000c 0023     		movs	r3, #0
 1495 000e FB60     		str	r3, [r7, #12]
 1496              		.loc 1 889 36
 1497 0010 0023     		movs	r3, #0
 1498 0012 3B60     		str	r3, [r7]
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 1499              		.loc 1 890 12
 1500 0014 0023     		movs	r3, #0
 1501 0016 BB60     		str	r3, [r7, #8]
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 1502              		.loc 1 893 14
 1503 0018 674B     		ldr	r3, .L104
 1504 001a 9B68     		ldr	r3, [r3, #8]
 1505              		.loc 1 893 21
 1506 001c 03F00C03 		and	r3, r3, #12
 1507              		.loc 1 893 3
 1508 0020 082B     		cmp	r3, #8
 1509 0022 0DD0     		beq	.L96
 1510 0024 082B     		cmp	r3, #8
 1511 0026 00F2BD80 		bhi	.L97
 1512 002a 002B     		cmp	r3, #0
 1513 002c 02D0     		beq	.L98
 1514 002e 042B     		cmp	r3, #4
 1515 0030 03D0     		beq	.L99
 1516 0032 B7E0     		b	.L97
 1517              	.L98:
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1518              		.loc 1 897 20
 1519 0034 614B     		ldr	r3, .L104+4
 1520 0036 BB60     		str	r3, [r7, #8]
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        break;
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 44


 1521              		.loc 1 898 8
 1522 0038 B7E0     		b	.L100
 1523              	.L99:
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 1524              		.loc 1 902 20
 1525 003a 614B     		ldr	r3, .L104+8
 1526 003c BB60     		str	r3, [r7, #8]
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1527              		.loc 1 903 7
 1528 003e B4E0     		b	.L100
 1529              	.L96:
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SYSCLK = PLL_VCO / PLLP */
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 1530              		.loc 1 909 17
 1531 0040 5D4B     		ldr	r3, .L104
 1532 0042 5B68     		ldr	r3, [r3, #4]
 1533              		.loc 1 909 12
 1534 0044 03F03F03 		and	r3, r3, #63
 1535 0048 7B60     		str	r3, [r7, #4]
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 1536              		.loc 1 910 10
 1537 004a 5B4B     		ldr	r3, .L104
 1538 004c 5B68     		ldr	r3, [r3, #4]
 1539 004e 03F48003 		and	r3, r3, #4194304
 1540              		.loc 1 910 9
 1541 0052 002B     		cmp	r3, #0
 1542 0054 4DD0     		beq	.L101
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSE used as PLL clock source */
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 1543              		.loc 1 913 72
 1544 0056 584B     		ldr	r3, .L104
 1545 0058 5B68     		ldr	r3, [r3, #4]
 1546              		.loc 1 913 102
 1547 005a 9B09     		lsrs	r3, r3, #6
 1548              		.loc 1 913 56
 1549 005c 1A46     		mov	r2, r3
 1550 005e 4FF00003 		mov	r3, #0
 1551 0062 40F2FF10 		movw	r0, #511
 1552 0066 4FF00001 		mov	r1, #0
 1553 006a 02EA0008 		and	r8, r2, r0
 1554 006e 03EA0109 		and	r9, r3, r1
 1555              		.loc 1 913 53
 1556 0072 4046     		mov	r0, r8
 1557 0074 4946     		mov	r1, r9
 1558 0076 4FF00002 		mov	r2, #0
 1559 007a 4FF00003 		mov	r3, #0
 1560 007e 4B01     		lsls	r3, r1, #5
 1561 0080 43EAD063 		orr	r3, r3, r0, lsr #27
 1562 0084 4201     		lsls	r2, r0, #5
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 45


 1563 0086 1046     		mov	r0, r2
 1564 0088 1946     		mov	r1, r3
 1565 008a B0EB0800 		subs	r0, r0, r8
 1566 008e 61EB0901 		sbc	r1, r1, r9
 1567 0092 4FF00002 		mov	r2, #0
 1568 0096 4FF00003 		mov	r3, #0
 1569 009a 8B01     		lsls	r3, r1, #6
 1570 009c 43EA9063 		orr	r3, r3, r0, lsr #26
 1571 00a0 8201     		lsls	r2, r0, #6
 1572 00a2 121A     		subs	r2, r2, r0
 1573 00a4 63EB0103 		sbc	r3, r3, r1
 1574 00a8 4FF00000 		mov	r0, #0
 1575 00ac 4FF00001 		mov	r1, #0
 1576 00b0 D900     		lsls	r1, r3, #3
 1577 00b2 41EA5271 		orr	r1, r1, r2, lsr #29
 1578 00b6 D000     		lsls	r0, r2, #3
 1579 00b8 0246     		mov	r2, r0
 1580 00ba 0B46     		mov	r3, r1
 1581 00bc 12EB0802 		adds	r2, r2, r8
 1582 00c0 43EB0903 		adc	r3, r3, r9
 1583 00c4 4FF00000 		mov	r0, #0
 1584 00c8 4FF00001 		mov	r1, #0
 1585 00cc 5902     		lsls	r1, r3, #9
 1586 00ce 41EAD251 		orr	r1, r1, r2, lsr #23
 1587 00d2 5002     		lsls	r0, r2, #9
 1588 00d4 0246     		mov	r2, r0
 1589 00d6 0B46     		mov	r3, r1
 1590 00d8 1046     		mov	r0, r2
 1591 00da 1946     		mov	r1, r3
 1592              		.loc 1 913 132
 1593 00dc 7B68     		ldr	r3, [r7, #4]
 1594 00de 1A46     		mov	r2, r3
 1595 00e0 4FF00003 		mov	r3, #0
 1596              		.loc 1 913 130
 1597 00e4 FFF7FEFF 		bl	__aeabi_uldivmod
 1598              	.LVL0:
 1599 00e8 0246     		mov	r2, r0
 1600 00ea 0B46     		mov	r3, r1
 1601              		.loc 1 913 16
 1602 00ec 1346     		mov	r3, r2
 1603 00ee FB60     		str	r3, [r7, #12]
 1604 00f0 4AE0     		b	.L102
 1605              	.L101:
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSI used as PLL clock source */
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 1606              		.loc 1 918 72
 1607 00f2 314B     		ldr	r3, .L104
 1608 00f4 5B68     		ldr	r3, [r3, #4]
 1609              		.loc 1 918 102
 1610 00f6 9B09     		lsrs	r3, r3, #6
 1611              		.loc 1 918 56
 1612 00f8 1A46     		mov	r2, r3
 1613 00fa 4FF00003 		mov	r3, #0
 1614 00fe 40F2FF10 		movw	r0, #511
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 46


 1615 0102 4FF00001 		mov	r1, #0
 1616 0106 02EA0004 		and	r4, r2, r0
 1617 010a 03EA0105 		and	r5, r3, r1
 1618              		.loc 1 918 53
 1619 010e 2046     		mov	r0, r4
 1620 0110 2946     		mov	r1, r5
 1621 0112 4FF00002 		mov	r2, #0
 1622 0116 4FF00003 		mov	r3, #0
 1623 011a 4B01     		lsls	r3, r1, #5
 1624 011c 43EAD063 		orr	r3, r3, r0, lsr #27
 1625 0120 4201     		lsls	r2, r0, #5
 1626 0122 1046     		mov	r0, r2
 1627 0124 1946     		mov	r1, r3
 1628 0126 001B     		subs	r0, r0, r4
 1629 0128 61EB0501 		sbc	r1, r1, r5
 1630 012c 4FF00002 		mov	r2, #0
 1631 0130 4FF00003 		mov	r3, #0
 1632 0134 8B01     		lsls	r3, r1, #6
 1633 0136 43EA9063 		orr	r3, r3, r0, lsr #26
 1634 013a 8201     		lsls	r2, r0, #6
 1635 013c 121A     		subs	r2, r2, r0
 1636 013e 63EB0103 		sbc	r3, r3, r1
 1637 0142 4FF00000 		mov	r0, #0
 1638 0146 4FF00001 		mov	r1, #0
 1639 014a D900     		lsls	r1, r3, #3
 1640 014c 41EA5271 		orr	r1, r1, r2, lsr #29
 1641 0150 D000     		lsls	r0, r2, #3
 1642 0152 0246     		mov	r2, r0
 1643 0154 0B46     		mov	r3, r1
 1644 0156 1219     		adds	r2, r2, r4
 1645 0158 45EB0303 		adc	r3, r5, r3
 1646 015c 4FF00000 		mov	r0, #0
 1647 0160 4FF00001 		mov	r1, #0
 1648 0164 9902     		lsls	r1, r3, #10
 1649 0166 41EA9251 		orr	r1, r1, r2, lsr #22
 1650 016a 9002     		lsls	r0, r2, #10
 1651 016c 0246     		mov	r2, r0
 1652 016e 0B46     		mov	r3, r1
 1653 0170 1046     		mov	r0, r2
 1654 0172 1946     		mov	r1, r3
 1655              		.loc 1 918 132
 1656 0174 7B68     		ldr	r3, [r7, #4]
 1657 0176 1A46     		mov	r2, r3
 1658 0178 4FF00003 		mov	r3, #0
 1659              		.loc 1 918 130
 1660 017c FFF7FEFF 		bl	__aeabi_uldivmod
 1661              	.LVL1:
 1662 0180 0246     		mov	r2, r0
 1663 0182 0B46     		mov	r3, r1
 1664              		.loc 1 918 16
 1665 0184 1346     		mov	r3, r2
 1666 0186 FB60     		str	r3, [r7, #12]
 1667              	.L102:
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 1668              		.loc 1 920 21
 1669 0188 0B4B     		ldr	r3, .L104
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 47


 1670 018a 5B68     		ldr	r3, [r3, #4]
 1671              		.loc 1 920 51
 1672 018c 1B0C     		lsrs	r3, r3, #16
 1673 018e 03F00303 		and	r3, r3, #3
 1674              		.loc 1 920 76
 1675 0192 0133     		adds	r3, r3, #1
 1676              		.loc 1 920 12
 1677 0194 5B00     		lsls	r3, r3, #1
 1678 0196 3B60     		str	r3, [r7]
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = pllvco/pllp;
 1679              		.loc 1 922 20
 1680 0198 FA68     		ldr	r2, [r7, #12]
 1681 019a 3B68     		ldr	r3, [r7]
 1682 019c B2FBF3F3 		udiv	r3, r2, r3
 1683 01a0 BB60     		str	r3, [r7, #8]
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1684              		.loc 1 923 7
 1685 01a2 02E0     		b	.L100
 1686              	.L97:
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     default:
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1687              		.loc 1 927 20
 1688 01a4 054B     		ldr	r3, .L104+4
 1689 01a6 BB60     		str	r3, [r7, #8]
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1690              		.loc 1 928 7
 1691 01a8 00BF     		nop
 1692              	.L100:
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return sysclockfreq;
 1693              		.loc 1 931 10
 1694 01aa BB68     		ldr	r3, [r7, #8]
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1695              		.loc 1 932 1
 1696 01ac 1846     		mov	r0, r3
 1697 01ae 1037     		adds	r7, r7, #16
 1698              	.LCFI30:
 1699              		.cfi_def_cfa_offset 24
 1700 01b0 BD46     		mov	sp, r7
 1701              	.LCFI31:
 1702              		.cfi_def_cfa_register 13
 1703              		@ sp needed
 1704 01b2 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 1705              	.L105:
 1706 01b6 00BF     		.align	2
 1707              	.L104:
 1708 01b8 00380240 		.word	1073887232
 1709 01bc 0024F400 		.word	16000000
 1710 01c0 00127A00 		.word	8000000
 1711              		.cfi_endproc
 1712              	.LFE136:
 1714              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1715              		.align	1
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 48


 1716              		.global	HAL_RCC_GetHCLKFreq
 1717              		.syntax unified
 1718              		.thumb
 1719              		.thumb_func
 1720              		.fpu fpv4-sp-d16
 1722              	HAL_RCC_GetHCLKFreq:
 1723              	.LFB137:
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated within this function
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HCLK frequency
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1724              		.loc 1 944 1
 1725              		.cfi_startproc
 1726              		@ args = 0, pretend = 0, frame = 0
 1727              		@ frame_needed = 1, uses_anonymous_args = 0
 1728              		@ link register save eliminated.
 1729 0000 80B4     		push	{r7}
 1730              	.LCFI32:
 1731              		.cfi_def_cfa_offset 4
 1732              		.cfi_offset 7, -4
 1733 0002 00AF     		add	r7, sp, #0
 1734              	.LCFI33:
 1735              		.cfi_def_cfa_register 7
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return SystemCoreClock;
 1736              		.loc 1 945 10
 1737 0004 034B     		ldr	r3, .L108
 1738 0006 1B68     		ldr	r3, [r3]
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1739              		.loc 1 946 1
 1740 0008 1846     		mov	r0, r3
 1741 000a BD46     		mov	sp, r7
 1742              	.LCFI34:
 1743              		.cfi_def_cfa_register 13
 1744              		@ sp needed
 1745 000c 5DF8047B 		ldr	r7, [sp], #4
 1746              	.LCFI35:
 1747              		.cfi_restore 7
 1748              		.cfi_def_cfa_offset 0
 1749 0010 7047     		bx	lr
 1750              	.L109:
 1751 0012 00BF     		.align	2
 1752              	.L108:
 1753 0014 00000000 		.word	SystemCoreClock
 1754              		.cfi_endproc
 1755              	.LFE137:
 1757              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1758              		.align	1
 1759              		.global	HAL_RCC_GetPCLK1Freq
 1760              		.syntax unified
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 49


 1761              		.thumb
 1762              		.thumb_func
 1763              		.fpu fpv4-sp-d16
 1765              	HAL_RCC_GetPCLK1Freq:
 1766              	.LFB138:
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK1 frequency
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1767              		.loc 1 955 1
 1768              		.cfi_startproc
 1769              		@ args = 0, pretend = 0, frame = 0
 1770              		@ frame_needed = 1, uses_anonymous_args = 0
 1771 0000 80B5     		push	{r7, lr}
 1772              	.LCFI36:
 1773              		.cfi_def_cfa_offset 8
 1774              		.cfi_offset 7, -8
 1775              		.cfi_offset 14, -4
 1776 0002 00AF     		add	r7, sp, #0
 1777              	.LCFI37:
 1778              		.cfi_def_cfa_register 7
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]
 1779              		.loc 1 957 11
 1780 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1781 0008 0246     		mov	r2, r0
 1782              		.loc 1 957 54
 1783 000a 054B     		ldr	r3, .L112
 1784 000c 9B68     		ldr	r3, [r3, #8]
 1785              		.loc 1 957 78
 1786 000e 9B0A     		lsrs	r3, r3, #10
 1787 0010 03F00703 		and	r3, r3, #7
 1788              		.loc 1 957 49
 1789 0014 0349     		ldr	r1, .L112+4
 1790 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1791              		.loc 1 957 33
 1792 0018 22FA03F3 		lsr	r3, r2, r3
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1793              		.loc 1 958 1
 1794 001c 1846     		mov	r0, r3
 1795 001e 80BD     		pop	{r7, pc}
 1796              	.L113:
 1797              		.align	2
 1798              	.L112:
 1799 0020 00380240 		.word	1073887232
 1800 0024 00000000 		.word	APBPrescTable
 1801              		.cfi_endproc
 1802              	.LFE138:
 1804              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1805              		.align	1
 1806              		.global	HAL_RCC_GetPCLK2Freq
 1807              		.syntax unified
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 50


 1808              		.thumb
 1809              		.thumb_func
 1810              		.fpu fpv4-sp-d16
 1812              	HAL_RCC_GetPCLK2Freq:
 1813              	.LFB139:
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK2 frequency
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1814              		.loc 1 967 1
 1815              		.cfi_startproc
 1816              		@ args = 0, pretend = 0, frame = 0
 1817              		@ frame_needed = 1, uses_anonymous_args = 0
 1818 0000 80B5     		push	{r7, lr}
 1819              	.LCFI38:
 1820              		.cfi_def_cfa_offset 8
 1821              		.cfi_offset 7, -8
 1822              		.cfi_offset 14, -4
 1823 0002 00AF     		add	r7, sp, #0
 1824              	.LCFI39:
 1825              		.cfi_def_cfa_register 7
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos])
 1826              		.loc 1 969 11
 1827 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1828 0008 0246     		mov	r2, r0
 1829              		.loc 1 969 53
 1830 000a 054B     		ldr	r3, .L116
 1831 000c 9B68     		ldr	r3, [r3, #8]
 1832              		.loc 1 969 77
 1833 000e 5B0B     		lsrs	r3, r3, #13
 1834 0010 03F00703 		and	r3, r3, #7
 1835              		.loc 1 969 48
 1836 0014 0349     		ldr	r1, .L116+4
 1837 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1838              		.loc 1 969 32
 1839 0018 22FA03F3 		lsr	r3, r2, r3
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1840              		.loc 1 970 1
 1841 001c 1846     		mov	r0, r3
 1842 001e 80BD     		pop	{r7, pc}
 1843              	.L117:
 1844              		.align	2
 1845              	.L116:
 1846 0020 00380240 		.word	1073887232
 1847 0024 00000000 		.word	APBPrescTable
 1848              		.cfi_endproc
 1849              	.LFE139:
 1851              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1852              		.align	1
 1853              		.weak	HAL_RCC_GetOscConfig
 1854              		.syntax unified
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 51


 1855              		.thumb
 1856              		.thumb_func
 1857              		.fpu fpv4-sp-d16
 1859              	HAL_RCC_GetOscConfig:
 1860              	.LFB140:
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1861              		.loc 1 980 1
 1862              		.cfi_startproc
 1863              		@ args = 0, pretend = 0, frame = 8
 1864              		@ frame_needed = 1, uses_anonymous_args = 0
 1865              		@ link register save eliminated.
 1866 0000 80B4     		push	{r7}
 1867              	.LCFI40:
 1868              		.cfi_def_cfa_offset 4
 1869              		.cfi_offset 7, -4
 1870 0002 83B0     		sub	sp, sp, #12
 1871              	.LCFI41:
 1872              		.cfi_def_cfa_offset 16
 1873 0004 00AF     		add	r7, sp, #0
 1874              	.LCFI42:
 1875              		.cfi_def_cfa_register 7
 1876 0006 7860     		str	r0, [r7, #4]
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 1877              		.loc 1 982 37
 1878 0008 7B68     		ldr	r3, [r7, #4]
 1879 000a 0F22     		movs	r2, #15
 1880 000c 1A60     		str	r2, [r3]
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 1881              		.loc 1 985 10
 1882 000e 454B     		ldr	r3, .L131
 1883 0010 1B68     		ldr	r3, [r3]
 1884              		.loc 1 985 15
 1885 0012 03F48023 		and	r3, r3, #262144
 1886              		.loc 1 985 5
 1887 0016 B3F5802F 		cmp	r3, #262144
 1888 001a 04D1     		bne	.L119
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 1889              		.loc 1 987 33
 1890 001c 7B68     		ldr	r3, [r7, #4]
 1891 001e 4FF4A022 		mov	r2, #327680
 1892 0022 5A60     		str	r2, [r3, #4]
 1893 0024 0EE0     		b	.L120
 1894              	.L119:
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 52


 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 1895              		.loc 1 989 15
 1896 0026 3F4B     		ldr	r3, .L131
 1897 0028 1B68     		ldr	r3, [r3]
 1898              		.loc 1 989 20
 1899 002a 03F48033 		and	r3, r3, #65536
 1900              		.loc 1 989 10
 1901 002e B3F5803F 		cmp	r3, #65536
 1902 0032 04D1     		bne	.L121
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 1903              		.loc 1 991 33
 1904 0034 7B68     		ldr	r3, [r7, #4]
 1905 0036 4FF48032 		mov	r2, #65536
 1906 003a 5A60     		str	r2, [r3, #4]
 1907 003c 02E0     		b	.L120
 1908              	.L121:
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 1909              		.loc 1 995 33
 1910 003e 7B68     		ldr	r3, [r7, #4]
 1911 0040 0022     		movs	r2, #0
 1912 0042 5A60     		str	r2, [r3, #4]
 1913              	.L120:
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 1914              		.loc 1 999 10
 1915 0044 374B     		ldr	r3, .L131
 1916 0046 1B68     		ldr	r3, [r3]
 1917              		.loc 1 999 15
 1918 0048 03F00103 		and	r3, r3, #1
 1919              		.loc 1 999 5
 1920 004c 012B     		cmp	r3, #1
 1921 004e 03D1     		bne	.L122
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 1922              		.loc 1 1001 33
 1923 0050 7B68     		ldr	r3, [r7, #4]
 1924 0052 0122     		movs	r2, #1
 1925 0054 DA60     		str	r2, [r3, #12]
 1926 0056 02E0     		b	.L123
 1927              	.L122:
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 1928              		.loc 1 1005 33
 1929 0058 7B68     		ldr	r3, [r7, #4]
 1930 005a 0022     		movs	r2, #0
 1931 005c DA60     		str	r2, [r3, #12]
 1932              	.L123:
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 53


1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR &RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_P
 1933              		.loc 1 1008 59
 1934 005e 314B     		ldr	r3, .L131
 1935 0060 1B68     		ldr	r3, [r3]
 1936              		.loc 1 1008 44
 1937 0062 DB08     		lsrs	r3, r3, #3
 1938 0064 03F01F02 		and	r2, r3, #31
 1939              		.loc 1 1008 42
 1940 0068 7B68     		ldr	r3, [r7, #4]
 1941 006a 1A61     		str	r2, [r3, #16]
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 1942              		.loc 1 1011 10
 1943 006c 2D4B     		ldr	r3, .L131
 1944 006e 1B6F     		ldr	r3, [r3, #112]
 1945              		.loc 1 1011 17
 1946 0070 03F00403 		and	r3, r3, #4
 1947              		.loc 1 1011 5
 1948 0074 042B     		cmp	r3, #4
 1949 0076 03D1     		bne	.L124
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 1950              		.loc 1 1013 33
 1951 0078 7B68     		ldr	r3, [r7, #4]
 1952 007a 0522     		movs	r2, #5
 1953 007c 9A60     		str	r2, [r3, #8]
 1954 007e 0CE0     		b	.L125
 1955              	.L124:
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 1956              		.loc 1 1015 15
 1957 0080 284B     		ldr	r3, .L131
 1958 0082 1B6F     		ldr	r3, [r3, #112]
 1959              		.loc 1 1015 22
 1960 0084 03F00103 		and	r3, r3, #1
 1961              		.loc 1 1015 10
 1962 0088 012B     		cmp	r3, #1
 1963 008a 03D1     		bne	.L126
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 1964              		.loc 1 1017 33
 1965 008c 7B68     		ldr	r3, [r7, #4]
 1966 008e 0122     		movs	r2, #1
 1967 0090 9A60     		str	r2, [r3, #8]
 1968 0092 02E0     		b	.L125
 1969              	.L126:
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 1970              		.loc 1 1021 33
 1971 0094 7B68     		ldr	r3, [r7, #4]
 1972 0096 0022     		movs	r2, #0
 1973 0098 9A60     		str	r2, [r3, #8]
 1974              	.L125:
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 54


1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 1975              		.loc 1 1025 10
 1976 009a 224B     		ldr	r3, .L131
 1977 009c 5B6F     		ldr	r3, [r3, #116]
 1978              		.loc 1 1025 16
 1979 009e 03F00103 		and	r3, r3, #1
 1980              		.loc 1 1025 5
 1981 00a2 012B     		cmp	r3, #1
 1982 00a4 03D1     		bne	.L127
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 1983              		.loc 1 1027 33
 1984 00a6 7B68     		ldr	r3, [r7, #4]
 1985 00a8 0122     		movs	r2, #1
 1986 00aa 5A61     		str	r2, [r3, #20]
 1987 00ac 02E0     		b	.L128
 1988              	.L127:
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 1989              		.loc 1 1031 33
 1990 00ae 7B68     		ldr	r3, [r7, #4]
 1991 00b0 0022     		movs	r2, #0
 1992 00b2 5A61     		str	r2, [r3, #20]
 1993              	.L128:
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 1994              		.loc 1 1035 10
 1995 00b4 1B4B     		ldr	r3, .L131
 1996 00b6 1B68     		ldr	r3, [r3]
 1997              		.loc 1 1035 15
 1998 00b8 03F08073 		and	r3, r3, #16777216
 1999              		.loc 1 1035 5
 2000 00bc B3F1807F 		cmp	r3, #16777216
 2001 00c0 03D1     		bne	.L129
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2002              		.loc 1 1037 37
 2003 00c2 7B68     		ldr	r3, [r7, #4]
 2004 00c4 0222     		movs	r2, #2
 2005 00c6 9A61     		str	r2, [r3, #24]
 2006 00c8 02E0     		b	.L130
 2007              	.L129:
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2008              		.loc 1 1041 37
 2009 00ca 7B68     		ldr	r3, [r7, #4]
 2010 00cc 0122     		movs	r2, #1
 2011 00ce 9A61     		str	r2, [r3, #24]
 2012              	.L130:
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 55


1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 2013              		.loc 1 1043 52
 2014 00d0 144B     		ldr	r3, .L131
 2015 00d2 5B68     		ldr	r3, [r3, #4]
 2016              		.loc 1 1043 38
 2017 00d4 03F48002 		and	r2, r3, #4194304
 2018              		.loc 1 1043 36
 2019 00d8 7B68     		ldr	r3, [r7, #4]
 2020 00da DA61     		str	r2, [r3, #28]
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM);
 2021              		.loc 1 1044 47
 2022 00dc 114B     		ldr	r3, .L131
 2023 00de 5B68     		ldr	r3, [r3, #4]
 2024              		.loc 1 1044 33
 2025 00e0 03F03F02 		and	r2, r3, #63
 2026              		.loc 1 1044 31
 2027 00e4 7B68     		ldr	r3, [r7, #4]
 2028 00e6 1A62     		str	r2, [r3, #32]
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Po
 2029              		.loc 1 1045 48
 2030 00e8 0E4B     		ldr	r3, .L131
 2031 00ea 5B68     		ldr	r3, [r3, #4]
 2032              		.loc 1 1045 33
 2033 00ec 9B09     		lsrs	r3, r3, #6
 2034 00ee C3F30802 		ubfx	r2, r3, #0, #9
 2035              		.loc 1 1045 31
 2036 00f2 7B68     		ldr	r3, [r7, #4]
 2037 00f4 5A62     		str	r2, [r3, #36]
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = (uint32_t)((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) + RCC_PLLCFGR_PLLP_0
 2038              		.loc 1 1046 50
 2039 00f6 0B4B     		ldr	r3, .L131
 2040 00f8 5B68     		ldr	r3, [r3, #4]
 2041              		.loc 1 1046 60
 2042 00fa 03F44033 		and	r3, r3, #196608
 2043              		.loc 1 1046 80
 2044 00fe 03F58033 		add	r3, r3, #65536
 2045              		.loc 1 1046 102
 2046 0102 5B00     		lsls	r3, r3, #1
 2047              		.loc 1 1046 33
 2048 0104 1A0C     		lsrs	r2, r3, #16
 2049              		.loc 1 1046 31
 2050 0106 7B68     		ldr	r3, [r7, #4]
 2051 0108 9A62     		str	r2, [r3, #40]
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Po
 2052              		.loc 1 1047 48
 2053 010a 064B     		ldr	r3, .L131
 2054 010c 5B68     		ldr	r3, [r3, #4]
 2055              		.loc 1 1047 33
 2056 010e 1B0E     		lsrs	r3, r3, #24
 2057 0110 03F00F02 		and	r2, r3, #15
 2058              		.loc 1 1047 31
 2059 0114 7B68     		ldr	r3, [r7, #4]
 2060 0116 DA62     		str	r2, [r3, #44]
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2061              		.loc 1 1048 1
 2062 0118 00BF     		nop
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 56


 2063 011a 0C37     		adds	r7, r7, #12
 2064              	.LCFI43:
 2065              		.cfi_def_cfa_offset 4
 2066 011c BD46     		mov	sp, r7
 2067              	.LCFI44:
 2068              		.cfi_def_cfa_register 13
 2069              		@ sp needed
 2070 011e 5DF8047B 		ldr	r7, [sp], #4
 2071              	.LCFI45:
 2072              		.cfi_restore 7
 2073              		.cfi_def_cfa_offset 0
 2074 0122 7047     		bx	lr
 2075              	.L132:
 2076              		.align	2
 2077              	.L131:
 2078 0124 00380240 		.word	1073887232
 2079              		.cfi_endproc
 2080              	.LFE140:
 2082              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2083              		.align	1
 2084              		.global	HAL_RCC_GetClockConfig
 2085              		.syntax unified
 2086              		.thumb
 2087              		.thumb_func
 2088              		.fpu fpv4-sp-d16
 2090              	HAL_RCC_GetClockConfig:
 2091              	.LFB141:
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_ClkInitStruct according to the internal
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2092              		.loc 1 1059 1
 2093              		.cfi_startproc
 2094              		@ args = 0, pretend = 0, frame = 8
 2095              		@ frame_needed = 1, uses_anonymous_args = 0
 2096              		@ link register save eliminated.
 2097 0000 80B4     		push	{r7}
 2098              	.LCFI46:
 2099              		.cfi_def_cfa_offset 4
 2100              		.cfi_offset 7, -4
 2101 0002 83B0     		sub	sp, sp, #12
 2102              	.LCFI47:
 2103              		.cfi_def_cfa_offset 16
 2104 0004 00AF     		add	r7, sp, #0
 2105              	.LCFI48:
 2106              		.cfi_def_cfa_register 7
 2107 0006 7860     		str	r0, [r7, #4]
 2108 0008 3960     		str	r1, [r7]
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 57


 2109              		.loc 1 1061 32
 2110 000a 7B68     		ldr	r3, [r7, #4]
 2111 000c 0F22     		movs	r2, #15
 2112 000e 1A60     		str	r2, [r3]
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2113              		.loc 1 1064 51
 2114 0010 124B     		ldr	r3, .L134
 2115 0012 9B68     		ldr	r3, [r3, #8]
 2116              		.loc 1 1064 37
 2117 0014 03F00302 		and	r2, r3, #3
 2118              		.loc 1 1064 35
 2119 0018 7B68     		ldr	r3, [r7, #4]
 2120 001a 5A60     		str	r2, [r3, #4]
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 2121              		.loc 1 1067 52
 2122 001c 0F4B     		ldr	r3, .L134
 2123 001e 9B68     		ldr	r3, [r3, #8]
 2124              		.loc 1 1067 38
 2125 0020 03F0F002 		and	r2, r3, #240
 2126              		.loc 1 1067 36
 2127 0024 7B68     		ldr	r3, [r7, #4]
 2128 0026 9A60     		str	r2, [r3, #8]
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 2129              		.loc 1 1070 53
 2130 0028 0C4B     		ldr	r3, .L134
 2131 002a 9B68     		ldr	r3, [r3, #8]
 2132              		.loc 1 1070 39
 2133 002c 03F4E052 		and	r2, r3, #7168
 2134              		.loc 1 1070 37
 2135 0030 7B68     		ldr	r3, [r7, #4]
 2136 0032 DA60     		str	r2, [r3, #12]
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 2137              		.loc 1 1073 54
 2138 0034 094B     		ldr	r3, .L134
 2139 0036 9B68     		ldr	r3, [r3, #8]
 2140              		.loc 1 1073 39
 2141 0038 DB08     		lsrs	r3, r3, #3
 2142 003a 03F4E052 		and	r2, r3, #7168
 2143              		.loc 1 1073 37
 2144 003e 7B68     		ldr	r3, [r7, #4]
 2145 0040 1A61     		str	r2, [r3, #16]
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 2146              		.loc 1 1076 32
 2147 0042 074B     		ldr	r3, .L134+4
 2148 0044 1B68     		ldr	r3, [r3]
 2149              		.loc 1 1076 16
 2150 0046 03F00702 		and	r2, r3, #7
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 58


 2151              		.loc 1 1076 14
 2152 004a 3B68     		ldr	r3, [r7]
 2153 004c 1A60     		str	r2, [r3]
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2154              		.loc 1 1077 1
 2155 004e 00BF     		nop
 2156 0050 0C37     		adds	r7, r7, #12
 2157              	.LCFI49:
 2158              		.cfi_def_cfa_offset 4
 2159 0052 BD46     		mov	sp, r7
 2160              	.LCFI50:
 2161              		.cfi_def_cfa_register 13
 2162              		@ sp needed
 2163 0054 5DF8047B 		ldr	r7, [sp], #4
 2164              	.LCFI51:
 2165              		.cfi_restore 7
 2166              		.cfi_def_cfa_offset 0
 2167 0058 7047     		bx	lr
 2168              	.L135:
 2169 005a 00BF     		.align	2
 2170              	.L134:
 2171 005c 00380240 		.word	1073887232
 2172 0060 003C0240 		.word	1073888256
 2173              		.cfi_endproc
 2174              	.LFE141:
 2176              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2177              		.align	1
 2178              		.global	HAL_RCC_NMI_IRQHandler
 2179              		.syntax unified
 2180              		.thumb
 2181              		.thumb_func
 2182              		.fpu fpv4-sp-d16
 2184              	HAL_RCC_NMI_IRQHandler:
 2185              	.LFB142:
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2186              		.loc 1 1085 1
 2187              		.cfi_startproc
 2188              		@ args = 0, pretend = 0, frame = 0
 2189              		@ frame_needed = 1, uses_anonymous_args = 0
 2190 0000 80B5     		push	{r7, lr}
 2191              	.LCFI52:
 2192              		.cfi_def_cfa_offset 8
 2193              		.cfi_offset 7, -8
 2194              		.cfi_offset 14, -4
 2195 0002 00AF     		add	r7, sp, #0
 2196              	.LCFI53:
 2197              		.cfi_def_cfa_register 7
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 2198              		.loc 1 1087 6
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 59


 2199 0004 064B     		ldr	r3, .L139
 2200 0006 DB68     		ldr	r3, [r3, #12]
 2201 0008 03F08003 		and	r3, r3, #128
 2202              		.loc 1 1087 5
 2203 000c 802B     		cmp	r3, #128
 2204 000e 04D1     		bne	.L138
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2205              		.loc 1 1090 5
 2206 0010 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2207              		.loc 1 1093 5
 2208 0014 034B     		ldr	r3, .L139+4
 2209 0016 8022     		movs	r2, #128
 2210 0018 1A70     		strb	r2, [r3]
 2211              	.L138:
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2212              		.loc 1 1095 1
 2213 001a 00BF     		nop
 2214 001c 80BD     		pop	{r7, pc}
 2215              	.L140:
 2216 001e 00BF     		.align	2
 2217              	.L139:
 2218 0020 00380240 		.word	1073887232
 2219 0024 0E380240 		.word	1073887246
 2220              		.cfi_endproc
 2221              	.LFE142:
 2223              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2224              		.align	1
 2225              		.weak	HAL_RCC_CSSCallback
 2226              		.syntax unified
 2227              		.thumb
 2228              		.thumb_func
 2229              		.fpu fpv4-sp-d16
 2231              	HAL_RCC_CSSCallback:
 2232              	.LFB143:
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2233              		.loc 1 1102 1
 2234              		.cfi_startproc
 2235              		@ args = 0, pretend = 0, frame = 0
 2236              		@ frame_needed = 1, uses_anonymous_args = 0
 2237              		@ link register save eliminated.
 2238 0000 80B4     		push	{r7}
 2239              	.LCFI54:
 2240              		.cfi_def_cfa_offset 4
 2241              		.cfi_offset 7, -4
 2242 0002 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 60


 2243              	.LCFI55:
 2244              		.cfi_def_cfa_register 7
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             the HAL_RCC_CSSCallback could be implemented in the user file
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    */
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2245              		.loc 1 1106 1
 2246 0004 00BF     		nop
 2247 0006 BD46     		mov	sp, r7
 2248              	.LCFI56:
 2249              		.cfi_def_cfa_register 13
 2250              		@ sp needed
 2251 0008 5DF8047B 		ldr	r7, [sp], #4
 2252              	.LCFI57:
 2253              		.cfi_restore 7
 2254              		.cfi_def_cfa_offset 0
 2255 000c 7047     		bx	lr
 2256              		.cfi_endproc
 2257              	.LFE143:
 2259              		.text
 2260              	.Letext0:
 2261              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_de
 2262              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdint
 2263              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2264              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2265              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 2266              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2267              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2268              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2269              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2270              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2271              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s 			page 61


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_rcc.c
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:18     .text.HAL_RCC_DeInit:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:26     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:58     .text.HAL_RCC_OscConfig:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:65     .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:523    .text.HAL_RCC_OscConfig:00000000000002ac $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:529    .text.HAL_RCC_OscConfig:00000000000002bc $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:900    .text.HAL_RCC_OscConfig:00000000000004e4 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:907    .text.HAL_RCC_ClockConfig:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:914    .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1469   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1216   .text.HAL_RCC_ClockConfig:00000000000001b8 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1225   .text.HAL_RCC_MCOConfig:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1232   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1364   .text.HAL_RCC_MCOConfig:00000000000000c4 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1371   .text.HAL_RCC_EnableCSS:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1378   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1411   .text.HAL_RCC_EnableCSS:0000000000000014 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1416   .text.HAL_RCC_DisableCSS:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1423   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1456   .text.HAL_RCC_DisableCSS:0000000000000014 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1462   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1708   .text.HAL_RCC_GetSysClockFreq:00000000000001b8 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1715   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1722   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1753   .text.HAL_RCC_GetHCLKFreq:0000000000000014 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1758   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1765   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1799   .text.HAL_RCC_GetPCLK1Freq:0000000000000020 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1805   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1812   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1846   .text.HAL_RCC_GetPCLK2Freq:0000000000000020 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1852   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:1859   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:2078   .text.HAL_RCC_GetOscConfig:0000000000000124 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:2083   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:2090   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:2171   .text.HAL_RCC_GetClockConfig:000000000000005c $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:2177   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:2184   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:2231   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:2218   .text.HAL_RCC_NMI_IRQHandler:0000000000000020 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//ccA3Ygx6.s:2224   .text.HAL_RCC_CSSCallback:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
AHBPrescTable
SystemCoreClock
uwTickPrio
HAL_GPIO_Init
__aeabi_uldivmod
APBPrescTable
