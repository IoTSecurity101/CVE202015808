ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f4xx_hal_pwr.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_PWR_DeInit,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_PWR_DeInit
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_PWR_DeInit:
  26              	.LFB130:
  27              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @file    stm32f4xx_hal_pwr.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief   PWR HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          functionalities of the Power Controller (PWR) peripheral:
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           + Peripheral Control functions 
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   ******************************************************************************
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @attention
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * All rights reserved.</center></h2>
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * the "License"; You may not use this file except in compliance with the
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * License. You may obtain a copy of the License at:
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *                        opensource.org/licenses/BSD-3-Clause
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   ******************************************************************************
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */ 
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Includes ------------------------------------------------------------------*/
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #include "stm32f4xx_hal.h"
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @addtogroup STM32F4xx_HAL_Driver
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 2


  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR PWR
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief PWR HAL module driver
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #ifdef HAL_PWR_MODULE_ENABLED
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private typedef -----------------------------------------------------------*/
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private define ------------------------------------------------------------*/
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @addtogroup PWR_Private_Constants
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_PVD_Mode_Mask PWR PVD Mode Mask
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */     
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_MODE_IT               0x00010000U
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_MODE_EVT              0x00020000U
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_RISING_EDGE           0x00000001U
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #define PVD_FALLING_EDGE          0x00000002U
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @}
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @}
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */    
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private macro -------------------------------------------------------------*/
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private variables ---------------------------------------------------------*/
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private function prototypes -----------------------------------------------*/
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /* Private functions ---------------------------------------------------------*/
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions PWR Exported Functions
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group1 Initialization and de-initialization functions 
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *  @brief    Initialization and de-initialization functions
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @verbatim
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               ##### Initialization and de-initialization functions #####
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       After reset, the backup domain (RTC registers, RTC backup data 
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       registers and backup SRAM) is protected against possible unwanted 
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       write accesses. 
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       To enable access to the RTC Domain and RTC registers, proceed as follows:
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+) Enable the Power Controller (PWR) APB1 interface clock using the
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****             __HAL_RCC_PWR_CLK_ENABLE() macro.
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+) Enable access to RTC domain using the HAL_PWR_EnableBkUpAccess() function.
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @endverbatim
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 3


  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Deinitializes the HAL PWR peripheral registers to their default reset values.
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DeInit(void)
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
  28              		.loc 1 93 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_RCC_PWR_FORCE_RESET();
  40              		.loc 1 94 3
  41 0004 084B     		ldr	r3, .L2
  42 0006 1B6A     		ldr	r3, [r3, #32]
  43 0008 074A     		ldr	r2, .L2
  44 000a 43F08053 		orr	r3, r3, #268435456
  45 000e 1362     		str	r3, [r2, #32]
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_RCC_PWR_RELEASE_RESET();
  46              		.loc 1 95 3
  47 0010 054B     		ldr	r3, .L2
  48 0012 1B6A     		ldr	r3, [r3, #32]
  49 0014 044A     		ldr	r2, .L2
  50 0016 23F08053 		bic	r3, r3, #268435456
  51 001a 1362     		str	r3, [r2, #32]
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
  52              		.loc 1 96 1
  53 001c 00BF     		nop
  54 001e BD46     		mov	sp, r7
  55              	.LCFI2:
  56              		.cfi_def_cfa_register 13
  57              		@ sp needed
  58 0020 5DF8047B 		ldr	r7, [sp], #4
  59              	.LCFI3:
  60              		.cfi_restore 7
  61              		.cfi_def_cfa_offset 0
  62 0024 7047     		bx	lr
  63              	.L3:
  64 0026 00BF     		.align	2
  65              	.L2:
  66 0028 00380240 		.word	1073887232
  67              		.cfi_endproc
  68              	.LFE130:
  70              		.section	.text.HAL_PWR_EnableBkUpAccess,"ax",%progbits
  71              		.align	1
  72              		.global	HAL_PWR_EnableBkUpAccess
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  76              		.fpu fpv4-sp-d16
  78              	HAL_PWR_EnableBkUpAccess:
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 4


  79              	.LFB131:
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables access to the backup domain (RTC registers, RTC 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         backup data registers and backup SRAM).
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note If the HSE divided by 2, 3, ..31 is used as the RTC clock, the 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Backup Domain Access should be kept enabled.
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note The following sequence is required to bypass the delay between
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         DBP bit programming and the effective enabling  of the backup domain.
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Please check the Errata Sheet for more details under "Possible delay
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         in backup domain protection disabling/enabling after programming the
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         DBP bit" section.
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableBkUpAccess(void)
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
  80              		.loc 1 111 1
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 8
  83              		@ frame_needed = 1, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85 0000 80B4     		push	{r7}
  86              	.LCFI4:
  87              		.cfi_def_cfa_offset 4
  88              		.cfi_offset 7, -4
  89 0002 83B0     		sub	sp, sp, #12
  90              	.LCFI5:
  91              		.cfi_def_cfa_offset 16
  92 0004 00AF     		add	r7, sp, #0
  93              	.LCFI6:
  94              		.cfi_def_cfa_register 7
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __IO uint32_t dummyread;
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)ENABLE;
  95              		.loc 1 113 3
  96 0006 064B     		ldr	r3, .L5
  97              		.loc 1 113 32
  98 0008 0122     		movs	r2, #1
  99 000a 1A60     		str	r2, [r3]
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   dummyread = PWR->CR;
 100              		.loc 1 114 18
 101 000c 054B     		ldr	r3, .L5+4
 102 000e 1B68     		ldr	r3, [r3]
 103              		.loc 1 114 13
 104 0010 7B60     		str	r3, [r7, #4]
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   UNUSED(dummyread);
 105              		.loc 1 115 3
 106 0012 7B68     		ldr	r3, [r7, #4]
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 107              		.loc 1 116 1
 108 0014 00BF     		nop
 109 0016 0C37     		adds	r7, r7, #12
 110              	.LCFI7:
 111              		.cfi_def_cfa_offset 4
 112 0018 BD46     		mov	sp, r7
 113              	.LCFI8:
 114              		.cfi_def_cfa_register 13
 115              		@ sp needed
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 5


 116 001a 5DF8047B 		ldr	r7, [sp], #4
 117              	.LCFI9:
 118              		.cfi_restore 7
 119              		.cfi_def_cfa_offset 0
 120 001e 7047     		bx	lr
 121              	.L6:
 122              		.align	2
 123              	.L5:
 124 0020 20000E42 		.word	1108213792
 125 0024 00700040 		.word	1073770496
 126              		.cfi_endproc
 127              	.LFE131:
 129              		.section	.text.HAL_PWR_DisableBkUpAccess,"ax",%progbits
 130              		.align	1
 131              		.global	HAL_PWR_DisableBkUpAccess
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	HAL_PWR_DisableBkUpAccess:
 138              	.LFB132:
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables access to the backup domain (RTC registers, RTC 
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         backup data registers and backup SRAM).
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note If the HSE divided by 2, 3, ..31 is used as the RTC clock, the 
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Backup Domain Access should be kept enabled.
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note The following sequence is required to bypass the delay between
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         DBP bit programming and the effective disabling  of the backup domain.
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         Please check the Errata Sheet for more details under "Possible delay
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         in backup domain protection disabling/enabling after programming the
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         DBP bit" section.
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableBkUpAccess(void)
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 139              		.loc 1 131 1
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 8
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144 0000 80B4     		push	{r7}
 145              	.LCFI10:
 146              		.cfi_def_cfa_offset 4
 147              		.cfi_offset 7, -4
 148 0002 83B0     		sub	sp, sp, #12
 149              	.LCFI11:
 150              		.cfi_def_cfa_offset 16
 151 0004 00AF     		add	r7, sp, #0
 152              	.LCFI12:
 153              		.cfi_def_cfa_register 7
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __IO uint32_t dummyread;
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)DISABLE;
 154              		.loc 1 133 3
 155 0006 064B     		ldr	r3, .L8
 156              		.loc 1 133 32
 157 0008 0022     		movs	r2, #0
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 6


 158 000a 1A60     		str	r2, [r3]
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   dummyread = PWR->CR;
 159              		.loc 1 134 18
 160 000c 054B     		ldr	r3, .L8+4
 161 000e 1B68     		ldr	r3, [r3]
 162              		.loc 1 134 13
 163 0010 7B60     		str	r3, [r7, #4]
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   UNUSED(dummyread);
 164              		.loc 1 135 3
 165 0012 7B68     		ldr	r3, [r7, #4]
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 166              		.loc 1 136 1
 167 0014 00BF     		nop
 168 0016 0C37     		adds	r7, r7, #12
 169              	.LCFI13:
 170              		.cfi_def_cfa_offset 4
 171 0018 BD46     		mov	sp, r7
 172              	.LCFI14:
 173              		.cfi_def_cfa_register 13
 174              		@ sp needed
 175 001a 5DF8047B 		ldr	r7, [sp], #4
 176              	.LCFI15:
 177              		.cfi_restore 7
 178              		.cfi_def_cfa_offset 0
 179 001e 7047     		bx	lr
 180              	.L9:
 181              		.align	2
 182              	.L8:
 183 0020 20000E42 		.word	1108213792
 184 0024 00700040 		.word	1073770496
 185              		.cfi_endproc
 186              	.LFE132:
 188              		.section	.text.HAL_PWR_ConfigPVD,"ax",%progbits
 189              		.align	1
 190              		.global	HAL_PWR_ConfigPVD
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu fpv4-sp-d16
 196              	HAL_PWR_ConfigPVD:
 197              	.LFB133:
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @}
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group2 Peripheral Control functions 
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *  @brief Low Power modes configuration functions 
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @verbatim
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                  ##### Peripheral Control functions #####
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****  ===============================================================================
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****      
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     *** PVD configuration ***
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     =========================
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 7


 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) The PVD is used to monitor the VDD power supply by comparing it to a 
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           threshold selected by the PVD Level (PLS[2:0] bits in the PWR_CR).
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) A PVDO flag is available to indicate if VDD/VDDA is higher or lower 
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           than the PVD threshold. This event is internally connected to the EXTI 
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           line16 and can generate an interrupt if enabled. This is done through
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           __HAL_PWR_PVD_EXTI_ENABLE_IT() macro.
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) The PVD is stopped in Standby mode.
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     *** Wake-up pin configuration ***
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     ================================
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Wake-up pin is used to wake up the system from Standby mode. This pin is 
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           forced in input pull-down configuration and is active on rising edges.
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) There is one Wake-up pin: Wake-up Pin 1 on PA.00.
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 	   (++) For STM32F446xx there are two Wake-Up pins: Pin1 on PA.00 and Pin2 on PC.13
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****            (++) For STM32F410xx/STM32F412xx/STM32F413xx/STM32F423xx  there are three Wake-Up pins: 
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     *** Low Power modes configuration ***
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     =====================================
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The devices feature 3 low-power modes:
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Sleep mode: Cortex-M4 core stopped, peripherals kept running.
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Stop mode: all clocks are stopped, regulator running, regulator 
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           in low power mode
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Standby mode: 1.2V domain powered off.
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Sleep mode ***
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    ==================
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Entry:
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         The Sleep mode is entered by using the HAL_PWR_EnterSLEEPMode(PWR_MAINREGULATOR_ON, PWR_SLE
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               functions with
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFI: enter SLEEP mode with WFI instruction
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFE: enter SLEEP mode with WFE instruction
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       -@@- The Regulator parameter is not used for the STM32F4 family 
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               and is kept as parameter just to maintain compatibility with the 
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               lower power families (STM32L).
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Exit:
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         Any peripheral interrupt acknowledged by the nested vectored interrupt 
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               controller (NVIC) can wake up the device from Sleep mode.
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Stop mode ***
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    =================
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       In Stop mode, all clocks in the 1.2V domain are stopped, the PLL, the HSI,
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       and the HSE RC oscillators are disabled. Internal SRAM and register contents 
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       are preserved.
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The voltage regulator can be configured either in normal or low-power mode.
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       To minimize the consumption In Stop mode, FLASH can be powered off before 
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       entering the Stop mode using the HAL_PWREx_EnableFlashPowerDown() function.
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       It can be switched on again by software after exiting the Stop mode using
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       the HAL_PWREx_DisableFlashPowerDown() function. 
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Entry:
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****          The Stop mode is entered using the HAL_PWR_EnterSTOPMode(PWR_MAINREGULATOR_ON) 
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 8


 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****              function with:
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) Main regulator ON.
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****           (++) Low Power regulator ON.
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) Exit:
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         Any EXTI Line (Internal or External) configured in Interrupt/Event mode.
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Standby mode ***
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    ====================
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     (+)
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The Standby mode allows to achieve the lowest power consumption. It is based 
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       on the Cortex-M4 deep sleep mode, with the voltage regulator disabled. 
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The 1.2V domain is consequently powered off. The PLL, the HSI oscillator and 
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       the HSE oscillator are also switched off. SRAM and register contents are lost 
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       except for the RTC registers, RTC backup registers, backup SRAM and Standby 
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       circuitry.
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       The voltage regulator is OFF.
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (++) Entry:
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) The Standby mode is entered using the HAL_PWR_EnterSTANDBYMode() function.
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (++) Exit:
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (+++) WKUP pin rising edge, RTC alarm (Alarm A and Alarm B), RTC wake-up,
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****              tamper event, time-stamp event, external reset in NRST pin, IWDG reset.
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    *** Auto-wake-up (AWU) from low-power mode ***
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    =============================================
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     [..]
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****      (+) The MCU can be woken up from low-power mode by an RTC Alarm event, an RTC 
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       Wake-up event, a tamper event or a time-stamp event, without depending on 
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       an external interrupt (Auto-wake-up mode).
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****       (+) RTC auto-wake-up (AWU) from the Stop and Standby modes
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****        
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC alarm event, it is necessary to 
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               configure the RTC to generate the RTC alarm using the HAL_RTC_SetAlarm_IT() function.
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC Tamper or time stamp event, it 
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****              is necessary to configure the RTC to detect the tamper or time stamp event using the
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                 HAL_RTCEx_SetTimeStamp_IT() or HAL_RTCEx_SetTamper_IT() functions.
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****                   
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC Wake-up event, it is necessary to
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****               configure the RTC to generate the RTC Wake-up event using the HAL_RTCEx_SetWakeUpTime
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** @endverbatim
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @{
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Configures the voltage threshold detected by the Power Voltage Detector(PVD).
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param sConfigPVD pointer to an PWR_PVDTypeDef structure that contains the configuration
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *        information for the PVD.
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Refer to the electrical characteristics of your device datasheet for
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         more details about the voltage threshold corresponding to each 
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         detection level.
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 9


 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_ConfigPVD(PWR_PVDTypeDef *sConfigPVD)
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 198              		.loc 1 269 1
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 8
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203 0000 80B4     		push	{r7}
 204              	.LCFI16:
 205              		.cfi_def_cfa_offset 4
 206              		.cfi_offset 7, -4
 207 0002 83B0     		sub	sp, sp, #12
 208              	.LCFI17:
 209              		.cfi_def_cfa_offset 16
 210 0004 00AF     		add	r7, sp, #0
 211              	.LCFI18:
 212              		.cfi_def_cfa_register 7
 213 0006 7860     		str	r0, [r7, #4]
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_LEVEL(sConfigPVD->PVDLevel));
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_MODE(sConfigPVD->Mode));
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set PLS[7:5] bits according to PVDLevel value */
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR, PWR_CR_PLS, sConfigPVD->PVDLevel);
 214              		.loc 1 275 3
 215 0008 2B4B     		ldr	r3, .L16
 216 000a 1B68     		ldr	r3, [r3]
 217 000c 23F0E002 		bic	r2, r3, #224
 218 0010 7B68     		ldr	r3, [r7, #4]
 219 0012 1B68     		ldr	r3, [r3]
 220 0014 2849     		ldr	r1, .L16
 221 0016 1343     		orrs	r3, r3, r2
 222 0018 0B60     		str	r3, [r1]
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_EVENT();
 223              		.loc 1 278 3
 224 001a 284B     		ldr	r3, .L16+4
 225 001c 5B68     		ldr	r3, [r3, #4]
 226 001e 274A     		ldr	r2, .L16+4
 227 0020 23F48033 		bic	r3, r3, #65536
 228 0024 5360     		str	r3, [r2, #4]
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_IT();
 229              		.loc 1 279 3
 230 0026 254B     		ldr	r3, .L16+4
 231 0028 1B68     		ldr	r3, [r3]
 232 002a 244A     		ldr	r2, .L16+4
 233 002c 23F48033 		bic	r3, r3, #65536
 234 0030 1360     		str	r3, [r2]
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE();
 235              		.loc 1 280 3
 236 0032 224B     		ldr	r3, .L16+4
 237 0034 9B68     		ldr	r3, [r3, #8]
 238 0036 214A     		ldr	r2, .L16+4
 239 0038 23F48033 		bic	r3, r3, #65536
 240 003c 9360     		str	r3, [r2, #8]
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 10


 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE(); 
 241              		.loc 1 281 3
 242 003e 1F4B     		ldr	r3, .L16+4
 243 0040 DB68     		ldr	r3, [r3, #12]
 244 0042 1E4A     		ldr	r2, .L16+4
 245 0044 23F48033 		bic	r3, r3, #65536
 246 0048 D360     		str	r3, [r2, #12]
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Configure interrupt mode */
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_IT) == PVD_MODE_IT)
 247              		.loc 1 284 17
 248 004a 7B68     		ldr	r3, [r7, #4]
 249 004c 5B68     		ldr	r3, [r3, #4]
 250              		.loc 1 284 24
 251 004e 03F48033 		and	r3, r3, #65536
 252              		.loc 1 284 5
 253 0052 002B     		cmp	r3, #0
 254 0054 05D0     		beq	.L11
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_IT();
 255              		.loc 1 286 5
 256 0056 194B     		ldr	r3, .L16+4
 257 0058 1B68     		ldr	r3, [r3]
 258 005a 184A     		ldr	r2, .L16+4
 259 005c 43F48033 		orr	r3, r3, #65536
 260 0060 1360     		str	r3, [r2]
 261              	.L11:
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Configure event mode */
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_EVT) == PVD_MODE_EVT)
 262              		.loc 1 290 17
 263 0062 7B68     		ldr	r3, [r7, #4]
 264 0064 5B68     		ldr	r3, [r3, #4]
 265              		.loc 1 290 24
 266 0066 03F40033 		and	r3, r3, #131072
 267              		.loc 1 290 5
 268 006a 002B     		cmp	r3, #0
 269 006c 05D0     		beq	.L12
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_EVENT();
 270              		.loc 1 292 5
 271 006e 134B     		ldr	r3, .L16+4
 272 0070 5B68     		ldr	r3, [r3, #4]
 273 0072 124A     		ldr	r2, .L16+4
 274 0074 43F48033 		orr	r3, r3, #65536
 275 0078 5360     		str	r3, [r2, #4]
 276              	.L12:
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Configure the edge */
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_RISING_EDGE) == PVD_RISING_EDGE)
 277              		.loc 1 296 17
 278 007a 7B68     		ldr	r3, [r7, #4]
 279 007c 5B68     		ldr	r3, [r3, #4]
 280              		.loc 1 296 24
 281 007e 03F00103 		and	r3, r3, #1
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 11


 282              		.loc 1 296 5
 283 0082 002B     		cmp	r3, #0
 284 0084 05D0     		beq	.L13
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE();
 285              		.loc 1 298 5
 286 0086 0D4B     		ldr	r3, .L16+4
 287 0088 9B68     		ldr	r3, [r3, #8]
 288 008a 0C4A     		ldr	r2, .L16+4
 289 008c 43F48033 		orr	r3, r3, #65536
 290 0090 9360     		str	r3, [r2, #8]
 291              	.L13:
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_FALLING_EDGE) == PVD_FALLING_EDGE)
 292              		.loc 1 301 17
 293 0092 7B68     		ldr	r3, [r7, #4]
 294 0094 5B68     		ldr	r3, [r3, #4]
 295              		.loc 1 301 24
 296 0096 03F00203 		and	r3, r3, #2
 297              		.loc 1 301 5
 298 009a 002B     		cmp	r3, #0
 299 009c 05D0     		beq	.L15
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE();
 300              		.loc 1 303 5
 301 009e 074B     		ldr	r3, .L16+4
 302 00a0 DB68     		ldr	r3, [r3, #12]
 303 00a2 064A     		ldr	r2, .L16+4
 304 00a4 43F48033 		orr	r3, r3, #65536
 305 00a8 D360     		str	r3, [r2, #12]
 306              	.L15:
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 307              		.loc 1 305 1
 308 00aa 00BF     		nop
 309 00ac 0C37     		adds	r7, r7, #12
 310              	.LCFI19:
 311              		.cfi_def_cfa_offset 4
 312 00ae BD46     		mov	sp, r7
 313              	.LCFI20:
 314              		.cfi_def_cfa_register 13
 315              		@ sp needed
 316 00b0 5DF8047B 		ldr	r7, [sp], #4
 317              	.LCFI21:
 318              		.cfi_restore 7
 319              		.cfi_def_cfa_offset 0
 320 00b4 7047     		bx	lr
 321              	.L17:
 322 00b6 00BF     		.align	2
 323              	.L16:
 324 00b8 00700040 		.word	1073770496
 325 00bc 003C0140 		.word	1073822720
 326              		.cfi_endproc
 327              	.LFE133:
 329              		.section	.text.HAL_PWR_EnablePVD,"ax",%progbits
 330              		.align	1
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 12


 331              		.global	HAL_PWR_EnablePVD
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 335              		.fpu fpv4-sp-d16
 337              	HAL_PWR_EnablePVD:
 338              	.LFB134:
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables the Power Voltage Detector(PVD).
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnablePVD(void)
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 339              		.loc 1 312 1
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 1, uses_anonymous_args = 0
 343              		@ link register save eliminated.
 344 0000 80B4     		push	{r7}
 345              	.LCFI22:
 346              		.cfi_def_cfa_offset 4
 347              		.cfi_offset 7, -4
 348 0002 00AF     		add	r7, sp, #0
 349              	.LCFI23:
 350              		.cfi_def_cfa_register 7
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)ENABLE;
 351              		.loc 1 313 3
 352 0004 034B     		ldr	r3, .L19
 353              		.loc 1 313 33
 354 0006 0122     		movs	r2, #1
 355 0008 1A60     		str	r2, [r3]
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 356              		.loc 1 314 1
 357 000a 00BF     		nop
 358 000c BD46     		mov	sp, r7
 359              	.LCFI24:
 360              		.cfi_def_cfa_register 13
 361              		@ sp needed
 362 000e 5DF8047B 		ldr	r7, [sp], #4
 363              	.LCFI25:
 364              		.cfi_restore 7
 365              		.cfi_def_cfa_offset 0
 366 0012 7047     		bx	lr
 367              	.L20:
 368              		.align	2
 369              	.L19:
 370 0014 10000E42 		.word	1108213776
 371              		.cfi_endproc
 372              	.LFE134:
 374              		.section	.text.HAL_PWR_DisablePVD,"ax",%progbits
 375              		.align	1
 376              		.global	HAL_PWR_DisablePVD
 377              		.syntax unified
 378              		.thumb
 379              		.thumb_func
 380              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 13


 382              	HAL_PWR_DisablePVD:
 383              	.LFB135:
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables the Power Voltage Detector(PVD).
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisablePVD(void)
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 384              		.loc 1 321 1
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 389 0000 80B4     		push	{r7}
 390              	.LCFI26:
 391              		.cfi_def_cfa_offset 4
 392              		.cfi_offset 7, -4
 393 0002 00AF     		add	r7, sp, #0
 394              	.LCFI27:
 395              		.cfi_def_cfa_register 7
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)DISABLE;
 396              		.loc 1 322 3
 397 0004 034B     		ldr	r3, .L22
 398              		.loc 1 322 33
 399 0006 0022     		movs	r2, #0
 400 0008 1A60     		str	r2, [r3]
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 401              		.loc 1 323 1
 402 000a 00BF     		nop
 403 000c BD46     		mov	sp, r7
 404              	.LCFI28:
 405              		.cfi_def_cfa_register 13
 406              		@ sp needed
 407 000e 5DF8047B 		ldr	r7, [sp], #4
 408              	.LCFI29:
 409              		.cfi_restore 7
 410              		.cfi_def_cfa_offset 0
 411 0012 7047     		bx	lr
 412              	.L23:
 413              		.align	2
 414              	.L22:
 415 0014 10000E42 		.word	1108213776
 416              		.cfi_endproc
 417              	.LFE135:
 419              		.section	.text.HAL_PWR_EnableWakeUpPin,"ax",%progbits
 420              		.align	1
 421              		.global	HAL_PWR_EnableWakeUpPin
 422              		.syntax unified
 423              		.thumb
 424              		.thumb_func
 425              		.fpu fpv4-sp-d16
 427              	HAL_PWR_EnableWakeUpPin:
 428              	.LFB136:
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables the Wake-up PINx functionality.
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 14


 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param WakeUpPinx Specifies the Power Wake-Up pin to enable.
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         This parameter can be one of the following values:
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN1
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN2 available only on STM32F410xx/STM32F446xx/STM32F412xx/STM32F413x
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN3 available only on STM32F410xx/STM32F412xx/STM32F413xx/STM32F423x
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableWakeUpPin(uint32_t WakeUpPinx)
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 429              		.loc 1 335 1
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 8
 432              		@ frame_needed = 1, uses_anonymous_args = 0
 433              		@ link register save eliminated.
 434 0000 80B4     		push	{r7}
 435              	.LCFI30:
 436              		.cfi_def_cfa_offset 4
 437              		.cfi_offset 7, -4
 438 0002 83B0     		sub	sp, sp, #12
 439              	.LCFI31:
 440              		.cfi_def_cfa_offset 16
 441 0004 00AF     		add	r7, sp, #0
 442              	.LCFI32:
 443              		.cfi_def_cfa_register 7
 444 0006 7860     		str	r0, [r7, #4]
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameter */
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Enable the wake up pin */
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(PWR->CSR, WakeUpPinx);
 445              		.loc 1 340 3
 446 0008 054B     		ldr	r3, .L25
 447 000a 5A68     		ldr	r2, [r3, #4]
 448 000c 0449     		ldr	r1, .L25
 449 000e 7B68     		ldr	r3, [r7, #4]
 450 0010 1343     		orrs	r3, r3, r2
 451 0012 4B60     		str	r3, [r1, #4]
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 452              		.loc 1 341 1
 453 0014 00BF     		nop
 454 0016 0C37     		adds	r7, r7, #12
 455              	.LCFI33:
 456              		.cfi_def_cfa_offset 4
 457 0018 BD46     		mov	sp, r7
 458              	.LCFI34:
 459              		.cfi_def_cfa_register 13
 460              		@ sp needed
 461 001a 5DF8047B 		ldr	r7, [sp], #4
 462              	.LCFI35:
 463              		.cfi_restore 7
 464              		.cfi_def_cfa_offset 0
 465 001e 7047     		bx	lr
 466              	.L26:
 467              		.align	2
 468              	.L25:
 469 0020 00700040 		.word	1073770496
 470              		.cfi_endproc
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 15


 471              	.LFE136:
 473              		.section	.text.HAL_PWR_DisableWakeUpPin,"ax",%progbits
 474              		.align	1
 475              		.global	HAL_PWR_DisableWakeUpPin
 476              		.syntax unified
 477              		.thumb
 478              		.thumb_func
 479              		.fpu fpv4-sp-d16
 481              	HAL_PWR_DisableWakeUpPin:
 482              	.LFB137:
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables the Wake-up PINx functionality.
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param WakeUpPinx Specifies the Power Wake-Up pin to disable.
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         This parameter can be one of the following values:
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN1
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN2 available only on STM32F410xx/STM32F446xx/STM32F412xx/STM32F413x
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *           @arg PWR_WAKEUP_PIN3 available only on STM32F410xx/STM32F412xx/STM32F413xx/STM32F423x
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableWakeUpPin(uint32_t WakeUpPinx)
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 483              		.loc 1 353 1
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 8
 486              		@ frame_needed = 1, uses_anonymous_args = 0
 487              		@ link register save eliminated.
 488 0000 80B4     		push	{r7}
 489              	.LCFI36:
 490              		.cfi_def_cfa_offset 4
 491              		.cfi_offset 7, -4
 492 0002 83B0     		sub	sp, sp, #12
 493              	.LCFI37:
 494              		.cfi_def_cfa_offset 16
 495 0004 00AF     		add	r7, sp, #0
 496              	.LCFI38:
 497              		.cfi_def_cfa_register 7
 498 0006 7860     		str	r0, [r7, #4]
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameter */
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));  
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Disable the wake up pin */
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(PWR->CSR, WakeUpPinx);
 499              		.loc 1 358 3
 500 0008 064B     		ldr	r3, .L28
 501 000a 5A68     		ldr	r2, [r3, #4]
 502 000c 7B68     		ldr	r3, [r7, #4]
 503 000e DB43     		mvns	r3, r3
 504 0010 0449     		ldr	r1, .L28
 505 0012 1340     		ands	r3, r3, r2
 506 0014 4B60     		str	r3, [r1, #4]
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 507              		.loc 1 359 1
 508 0016 00BF     		nop
 509 0018 0C37     		adds	r7, r7, #12
 510              	.LCFI39:
 511              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 16


 512 001a BD46     		mov	sp, r7
 513              	.LCFI40:
 514              		.cfi_def_cfa_register 13
 515              		@ sp needed
 516 001c 5DF8047B 		ldr	r7, [sp], #4
 517              	.LCFI41:
 518              		.cfi_restore 7
 519              		.cfi_def_cfa_offset 0
 520 0020 7047     		bx	lr
 521              	.L29:
 522 0022 00BF     		.align	2
 523              	.L28:
 524 0024 00700040 		.word	1073770496
 525              		.cfi_endproc
 526              	.LFE137:
 528              		.section	.text.HAL_PWR_EnterSLEEPMode,"ax",%progbits
 529              		.align	1
 530              		.global	HAL_PWR_EnterSLEEPMode
 531              		.syntax unified
 532              		.thumb
 533              		.thumb_func
 534              		.fpu fpv4-sp-d16
 536              	HAL_PWR_EnterSLEEPMode:
 537              	.LFB138:
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enters Sleep mode.
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *   
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Sleep mode, all I/O pins keep the same state as in Run mode.
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * 
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Sleep mode, the systick is stopped to avoid exit from this mode with
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       systick interrupt when used as time base for Timeout 
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *                
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param Regulator Specifies the regulator state in SLEEP mode.
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            This parameter can be one of the following values:
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_MAINREGULATOR_ON: SLEEP mode with regulator ON
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_LOWPOWERREGULATOR_ON: SLEEP mode with low power regulator ON
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note This parameter is not used for the STM32F4 family and is kept as parameter
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       just to maintain compatibility with the lower power families.
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param SLEEPEntry Specifies if SLEEP mode in entered with WFI or WFE instruction.
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFI: enter SLEEP mode with WFI instruction
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFE: enter SLEEP mode with WFE instruction
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSLEEPMode(uint32_t Regulator, uint8_t SLEEPEntry)
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 538              		.loc 1 382 1
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 8
 541              		@ frame_needed = 1, uses_anonymous_args = 0
 542              		@ link register save eliminated.
 543 0000 80B4     		push	{r7}
 544              	.LCFI42:
 545              		.cfi_def_cfa_offset 4
 546              		.cfi_offset 7, -4
 547 0002 83B0     		sub	sp, sp, #12
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 17


 548              	.LCFI43:
 549              		.cfi_def_cfa_offset 16
 550 0004 00AF     		add	r7, sp, #0
 551              	.LCFI44:
 552              		.cfi_def_cfa_register 7
 553 0006 7860     		str	r0, [r7, #4]
 554 0008 0B46     		mov	r3, r1
 555 000a FB70     		strb	r3, [r7, #3]
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_SLEEP_ENTRY(SLEEPEntry));
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear SLEEPDEEP bit of Cortex System Control Register */
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 556              		.loc 1 388 3
 557 000c 094B     		ldr	r3, .L34
 558 000e 1B69     		ldr	r3, [r3, #16]
 559 0010 084A     		ldr	r2, .L34
 560 0012 23F00403 		bic	r3, r3, #4
 561 0016 1361     		str	r3, [r2, #16]
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select SLEEP mode entry -------------------------------------------------*/
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if(SLEEPEntry == PWR_SLEEPENTRY_WFI)
 562              		.loc 1 391 5
 563 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 564 001a 012B     		cmp	r3, #1
 565 001c 01D1     		bne	.L31
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {   
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFI();
 566              		.loc 1 394 5
 567              		.syntax unified
 568              	@ 394 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 569 001e 30BF     		wfi
 570              	@ 0 "" 2
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   else
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Event */
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __SEV();
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 571              		.loc 1 403 1
 572              		.thumb
 573              		.syntax unified
 574 0020 02E0     		b	.L33
 575              	.L31:
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 576              		.loc 1 399 5
 577              		.syntax unified
 578              	@ 399 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 579 0022 40BF     		sev
 580              	@ 0 "" 2
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 581              		.loc 1 400 5
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 18


 582              	@ 400 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 583 0024 20BF     		wfe
 584              	@ 0 "" 2
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 585              		.loc 1 401 5
 586              	@ 401 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 587 0026 20BF     		wfe
 588              	@ 0 "" 2
 589              		.thumb
 590              		.syntax unified
 591              	.L33:
 592              		.loc 1 403 1
 593 0028 00BF     		nop
 594 002a 0C37     		adds	r7, r7, #12
 595              	.LCFI45:
 596              		.cfi_def_cfa_offset 4
 597 002c BD46     		mov	sp, r7
 598              	.LCFI46:
 599              		.cfi_def_cfa_register 13
 600              		@ sp needed
 601 002e 5DF8047B 		ldr	r7, [sp], #4
 602              	.LCFI47:
 603              		.cfi_restore 7
 604              		.cfi_def_cfa_offset 0
 605 0032 7047     		bx	lr
 606              	.L35:
 607              		.align	2
 608              	.L34:
 609 0034 00ED00E0 		.word	-536810240
 610              		.cfi_endproc
 611              	.LFE138:
 613              		.section	.text.HAL_PWR_EnterSTOPMode,"ax",%progbits
 614              		.align	1
 615              		.global	HAL_PWR_EnterSTOPMode
 616              		.syntax unified
 617              		.thumb
 618              		.thumb_func
 619              		.fpu fpv4-sp-d16
 621              	HAL_PWR_EnterSTOPMode:
 622              	.LFB139:
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enters Stop mode. 
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Stop mode, all I/O pins keep the same state as in Run mode.
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note When exiting Stop mode by issuing an interrupt or a wake-up event, 
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         the HSI RC oscillator is selected as system clock.
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note When the voltage regulator operates in low power mode, an additional 
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         startup delay is incurred when waking up from Stop mode. 
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         By keeping the internal regulator ON during Stop mode, the consumption 
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *         is higher although the startup time is reduced.    
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param Regulator Specifies the regulator state in Stop mode.
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_MAINREGULATOR_ON: Stop mode with regulator ON
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_LOWPOWERREGULATOR_ON: Stop mode with low power regulator ON
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @param STOPEntry Specifies if Stop mode in entered with WFI or WFE instruction.
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFI: Enter Stop mode with WFI instruction
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 19


 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFE: Enter Stop mode with WFE instruction
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSTOPMode(uint32_t Regulator, uint8_t STOPEntry)
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 623              		.loc 1 425 1
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 8
 626              		@ frame_needed = 1, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 628 0000 80B4     		push	{r7}
 629              	.LCFI48:
 630              		.cfi_def_cfa_offset 4
 631              		.cfi_offset 7, -4
 632 0002 83B0     		sub	sp, sp, #12
 633              	.LCFI49:
 634              		.cfi_def_cfa_offset 16
 635 0004 00AF     		add	r7, sp, #0
 636              	.LCFI50:
 637              		.cfi_def_cfa_register 7
 638 0006 7860     		str	r0, [r7, #4]
 639 0008 0B46     		mov	r3, r1
 640 000a FB70     		strb	r3, [r7, #3]
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check the parameters */
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select the regulator state in Stop mode: Set PDDS and LPDS bits according to PWR_Regulator val
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR, (PWR_CR_PDDS | PWR_CR_LPDS), Regulator);
 641              		.loc 1 431 3
 642 000c 104B     		ldr	r3, .L39
 643 000e 1B68     		ldr	r3, [r3]
 644 0010 23F00302 		bic	r2, r3, #3
 645 0014 0E49     		ldr	r1, .L39
 646 0016 7B68     		ldr	r3, [r7, #4]
 647 0018 1343     		orrs	r3, r3, r2
 648 001a 0B60     		str	r3, [r1]
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 649              		.loc 1 434 3
 650 001c 0D4B     		ldr	r3, .L39+4
 651 001e 1B69     		ldr	r3, [r3, #16]
 652 0020 0C4A     		ldr	r2, .L39+4
 653 0022 43F00403 		orr	r3, r3, #4
 654 0026 1361     		str	r3, [r2, #16]
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select Stop mode entry --------------------------------------------------*/
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 655              		.loc 1 437 5
 656 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 657 002a 012B     		cmp	r3, #1
 658 002c 01D1     		bne	.L37
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {   
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFI();
 659              		.loc 1 440 5
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 20


 660              		.syntax unified
 661              	@ 440 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 662 002e 30BF     		wfi
 663              	@ 0 "" 2
 664              		.thumb
 665              		.syntax unified
 666 0030 02E0     		b	.L38
 667              	.L37:
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   else
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Request Wait For Event */
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __SEV();
 668              		.loc 1 445 5
 669              		.syntax unified
 670              	@ 445 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 671 0032 40BF     		sev
 672              	@ 0 "" 2
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 673              		.loc 1 446 5
 674              	@ 446 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 675 0034 20BF     		wfe
 676              	@ 0 "" 2
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __WFE();
 677              		.loc 1 447 5
 678              	@ 447 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 679 0036 20BF     		wfe
 680              	@ 0 "" 2
 681              		.thumb
 682              		.syntax unified
 683              	.L38:
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));  
 684              		.loc 1 450 3
 685 0038 064B     		ldr	r3, .L39+4
 686 003a 1B69     		ldr	r3, [r3, #16]
 687 003c 054A     		ldr	r2, .L39+4
 688 003e 23F00403 		bic	r3, r3, #4
 689 0042 1361     		str	r3, [r2, #16]
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 690              		.loc 1 451 1
 691 0044 00BF     		nop
 692 0046 0C37     		adds	r7, r7, #12
 693              	.LCFI51:
 694              		.cfi_def_cfa_offset 4
 695 0048 BD46     		mov	sp, r7
 696              	.LCFI52:
 697              		.cfi_def_cfa_register 13
 698              		@ sp needed
 699 004a 5DF8047B 		ldr	r7, [sp], #4
 700              	.LCFI53:
 701              		.cfi_restore 7
 702              		.cfi_def_cfa_offset 0
 703 004e 7047     		bx	lr
 704              	.L40:
 705              		.align	2
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 21


 706              	.L39:
 707 0050 00700040 		.word	1073770496
 708 0054 00ED00E0 		.word	-536810240
 709              		.cfi_endproc
 710              	.LFE139:
 712              		.section	.text.HAL_PWR_EnterSTANDBYMode,"ax",%progbits
 713              		.align	1
 714              		.global	HAL_PWR_EnterSTANDBYMode
 715              		.syntax unified
 716              		.thumb
 717              		.thumb_func
 718              		.fpu fpv4-sp-d16
 720              	HAL_PWR_EnterSTANDBYMode:
 721              	.LFB140:
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enters Standby mode.
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note In Standby mode, all I/O pins are high impedance except for:
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - Reset pad (still available) 
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - RTC_AF1 pin (PC13) if configured for tamper, time-stamp, RTC 
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *            Alarm out, or RTC clock calibration out.
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - RTC_AF2 pin (PI8) if configured for tamper or time-stamp.  
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *          - WKUP pin 1 (PA0) if enabled.       
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnterSTANDBYMode(void)
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 722              		.loc 1 464 1
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 0
 725              		@ frame_needed = 1, uses_anonymous_args = 0
 726              		@ link register save eliminated.
 727 0000 80B4     		push	{r7}
 728              	.LCFI54:
 729              		.cfi_def_cfa_offset 4
 730              		.cfi_offset 7, -4
 731 0002 00AF     		add	r7, sp, #0
 732              	.LCFI55:
 733              		.cfi_def_cfa_register 7
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Select Standby mode */
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(PWR->CR, PWR_CR_PDDS);
 734              		.loc 1 466 3
 735 0004 084B     		ldr	r3, .L42
 736 0006 1B68     		ldr	r3, [r3]
 737 0008 074A     		ldr	r2, .L42
 738 000a 43F00203 		orr	r3, r3, #2
 739 000e 1360     		str	r3, [r2]
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 740              		.loc 1 469 3
 741 0010 064B     		ldr	r3, .L42+4
 742 0012 1B69     		ldr	r3, [r3, #16]
 743 0014 054A     		ldr	r2, .L42+4
 744 0016 43F00403 		orr	r3, r3, #4
 745 001a 1361     		str	r3, [r2, #16]
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 22


 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* This option is used to ensure that store operations are completed */
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #if defined ( __CC_ARM)
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __force_stores();
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** #endif
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Request Wait For Interrupt */
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   __WFI();
 746              		.loc 1 476 3
 747              		.syntax unified
 748              	@ 476 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c" 1
 749 001c 30BF     		wfi
 750              	@ 0 "" 2
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 751              		.loc 1 477 1
 752              		.thumb
 753              		.syntax unified
 754 001e 00BF     		nop
 755 0020 BD46     		mov	sp, r7
 756              	.LCFI56:
 757              		.cfi_def_cfa_register 13
 758              		@ sp needed
 759 0022 5DF8047B 		ldr	r7, [sp], #4
 760              	.LCFI57:
 761              		.cfi_restore 7
 762              		.cfi_def_cfa_offset 0
 763 0026 7047     		bx	lr
 764              	.L43:
 765              		.align	2
 766              	.L42:
 767 0028 00700040 		.word	1073770496
 768 002c 00ED00E0 		.word	-536810240
 769              		.cfi_endproc
 770              	.LFE140:
 772              		.section	.text.HAL_PWR_PVD_IRQHandler,"ax",%progbits
 773              		.align	1
 774              		.global	HAL_PWR_PVD_IRQHandler
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 778              		.fpu fpv4-sp-d16
 780              	HAL_PWR_PVD_IRQHandler:
 781              	.LFB141:
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief This function handles the PWR PVD interrupt request.
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note This API should be called under the PVD_IRQHandler().
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_PVD_IRQHandler(void)
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 782              		.loc 1 485 1
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 1, uses_anonymous_args = 0
 786 0000 80B5     		push	{r7, lr}
 787              	.LCFI58:
 788              		.cfi_def_cfa_offset 8
 789              		.cfi_offset 7, -8
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 23


 790              		.cfi_offset 14, -4
 791 0002 00AF     		add	r7, sp, #0
 792              	.LCFI59:
 793              		.cfi_def_cfa_register 7
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Check PWR Exti flag */
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   if(__HAL_PWR_PVD_EXTI_GET_FLAG() != RESET)
 794              		.loc 1 487 6
 795 0004 064B     		ldr	r3, .L47
 796 0006 5B69     		ldr	r3, [r3, #20]
 797 0008 03F48033 		and	r3, r3, #65536
 798              		.loc 1 487 5
 799 000c 002B     		cmp	r3, #0
 800 000e 05D0     		beq	.L46
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   {
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* PWR PVD interrupt user callback */
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     HAL_PWR_PVDCallback();
 801              		.loc 1 490 5
 802 0010 FFF7FEFF 		bl	HAL_PWR_PVDCallback
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     /* Clear PWR Exti pending bit */
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_CLEAR_FLAG();
 803              		.loc 1 493 5
 804 0014 024B     		ldr	r3, .L47
 805 0016 4FF48032 		mov	r2, #65536
 806 001a 5A61     		str	r2, [r3, #20]
 807              	.L46:
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   }
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 808              		.loc 1 495 1
 809 001c 00BF     		nop
 810 001e 80BD     		pop	{r7, pc}
 811              	.L48:
 812              		.align	2
 813              	.L47:
 814 0020 003C0140 		.word	1073822720
 815              		.cfi_endproc
 816              	.LFE141:
 818              		.section	.text.HAL_PWR_PVDCallback,"ax",%progbits
 819              		.align	1
 820              		.weak	HAL_PWR_PVDCallback
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 824              		.fpu fpv4-sp-d16
 826              	HAL_PWR_PVDCallback:
 827              	.LFB142:
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief  PWR PVD interrupt callback
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** __weak void HAL_PWR_PVDCallback(void)
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 828              		.loc 1 502 1
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 24


 832              		@ link register save eliminated.
 833 0000 80B4     		push	{r7}
 834              	.LCFI60:
 835              		.cfi_def_cfa_offset 4
 836              		.cfi_offset 7, -4
 837 0002 00AF     		add	r7, sp, #0
 838              	.LCFI61:
 839              		.cfi_def_cfa_register 7
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****             the HAL_PWR_PVDCallback could be implemented in the user file
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****    */ 
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 840              		.loc 1 506 1
 841 0004 00BF     		nop
 842 0006 BD46     		mov	sp, r7
 843              	.LCFI62:
 844              		.cfi_def_cfa_register 13
 845              		@ sp needed
 846 0008 5DF8047B 		ldr	r7, [sp], #4
 847              	.LCFI63:
 848              		.cfi_restore 7
 849              		.cfi_def_cfa_offset 0
 850 000c 7047     		bx	lr
 851              		.cfi_endproc
 852              	.LFE142:
 854              		.section	.text.HAL_PWR_EnableSleepOnExit,"ax",%progbits
 855              		.align	1
 856              		.global	HAL_PWR_EnableSleepOnExit
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 860              		.fpu fpv4-sp-d16
 862              	HAL_PWR_EnableSleepOnExit:
 863              	.LFB143:
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Indicates Sleep-On-Exit when returning from Handler mode to Thread mode. 
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Set SLEEPONEXIT bit of SCR register. When this bit is set, the processor 
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       Setting this bit is useful when the processor is expected to run only on
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       interruptions handling.         
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableSleepOnExit(void)
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 864              		.loc 1 517 1
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 0
 867              		@ frame_needed = 1, uses_anonymous_args = 0
 868              		@ link register save eliminated.
 869 0000 80B4     		push	{r7}
 870              	.LCFI64:
 871              		.cfi_def_cfa_offset 4
 872              		.cfi_offset 7, -4
 873 0002 00AF     		add	r7, sp, #0
 874              	.LCFI65:
 875              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 25


 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SLEEPONEXIT bit of Cortex System Control Register */
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 876              		.loc 1 519 3
 877 0004 054B     		ldr	r3, .L51
 878 0006 1B69     		ldr	r3, [r3, #16]
 879 0008 044A     		ldr	r2, .L51
 880 000a 43F00203 		orr	r3, r3, #2
 881 000e 1361     		str	r3, [r2, #16]
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 882              		.loc 1 520 1
 883 0010 00BF     		nop
 884 0012 BD46     		mov	sp, r7
 885              	.LCFI66:
 886              		.cfi_def_cfa_register 13
 887              		@ sp needed
 888 0014 5DF8047B 		ldr	r7, [sp], #4
 889              	.LCFI67:
 890              		.cfi_restore 7
 891              		.cfi_def_cfa_offset 0
 892 0018 7047     		bx	lr
 893              	.L52:
 894 001a 00BF     		.align	2
 895              	.L51:
 896 001c 00ED00E0 		.word	-536810240
 897              		.cfi_endproc
 898              	.LFE143:
 900              		.section	.text.HAL_PWR_DisableSleepOnExit,"ax",%progbits
 901              		.align	1
 902              		.global	HAL_PWR_DisableSleepOnExit
 903              		.syntax unified
 904              		.thumb
 905              		.thumb_func
 906              		.fpu fpv4-sp-d16
 908              	HAL_PWR_DisableSleepOnExit:
 909              	.LFB144:
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables Sleep-On-Exit feature when returning from Handler mode to Thread mode. 
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Clears SLEEPONEXIT bit of SCR register. When this bit is set, the processor 
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.          
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableSleepOnExit(void)
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 910              		.loc 1 529 1
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 0
 913              		@ frame_needed = 1, uses_anonymous_args = 0
 914              		@ link register save eliminated.
 915 0000 80B4     		push	{r7}
 916              	.LCFI68:
 917              		.cfi_def_cfa_offset 4
 918              		.cfi_offset 7, -4
 919 0002 00AF     		add	r7, sp, #0
 920              	.LCFI69:
 921              		.cfi_def_cfa_register 7
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear SLEEPONEXIT bit of Cortex System Control Register */
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 26


 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 922              		.loc 1 531 3
 923 0004 054B     		ldr	r3, .L54
 924 0006 1B69     		ldr	r3, [r3, #16]
 925 0008 044A     		ldr	r2, .L54
 926 000a 23F00203 		bic	r3, r3, #2
 927 000e 1361     		str	r3, [r2, #16]
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 928              		.loc 1 532 1
 929 0010 00BF     		nop
 930 0012 BD46     		mov	sp, r7
 931              	.LCFI70:
 932              		.cfi_def_cfa_register 13
 933              		@ sp needed
 934 0014 5DF8047B 		ldr	r7, [sp], #4
 935              	.LCFI71:
 936              		.cfi_restore 7
 937              		.cfi_def_cfa_offset 0
 938 0018 7047     		bx	lr
 939              	.L55:
 940 001a 00BF     		.align	2
 941              	.L54:
 942 001c 00ED00E0 		.word	-536810240
 943              		.cfi_endproc
 944              	.LFE144:
 946              		.section	.text.HAL_PWR_EnableSEVOnPend,"ax",%progbits
 947              		.align	1
 948              		.global	HAL_PWR_EnableSEVOnPend
 949              		.syntax unified
 950              		.thumb
 951              		.thumb_func
 952              		.fpu fpv4-sp-d16
 954              	HAL_PWR_EnableSEVOnPend:
 955              	.LFB145:
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Enables CORTEX M4 SEVONPEND bit. 
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Sets SEVONPEND bit of SCR register. When this bit is set, this causes 
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_EnableSEVOnPend(void)
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 956              		.loc 1 541 1
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 0
 959              		@ frame_needed = 1, uses_anonymous_args = 0
 960              		@ link register save eliminated.
 961 0000 80B4     		push	{r7}
 962              	.LCFI72:
 963              		.cfi_def_cfa_offset 4
 964              		.cfi_offset 7, -4
 965 0002 00AF     		add	r7, sp, #0
 966              	.LCFI73:
 967              		.cfi_def_cfa_register 7
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Set SEVONPEND bit of Cortex System Control Register */
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 27


 968              		.loc 1 543 3
 969 0004 054B     		ldr	r3, .L57
 970 0006 1B69     		ldr	r3, [r3, #16]
 971 0008 044A     		ldr	r2, .L57
 972 000a 43F01003 		orr	r3, r3, #16
 973 000e 1361     		str	r3, [r2, #16]
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 974              		.loc 1 544 1
 975 0010 00BF     		nop
 976 0012 BD46     		mov	sp, r7
 977              	.LCFI74:
 978              		.cfi_def_cfa_register 13
 979              		@ sp needed
 980 0014 5DF8047B 		ldr	r7, [sp], #4
 981              	.LCFI75:
 982              		.cfi_restore 7
 983              		.cfi_def_cfa_offset 0
 984 0018 7047     		bx	lr
 985              	.L58:
 986 001a 00BF     		.align	2
 987              	.L57:
 988 001c 00ED00E0 		.word	-536810240
 989              		.cfi_endproc
 990              	.LFE145:
 992              		.section	.text.HAL_PWR_DisableSEVOnPend,"ax",%progbits
 993              		.align	1
 994              		.global	HAL_PWR_DisableSEVOnPend
 995              		.syntax unified
 996              		.thumb
 997              		.thumb_func
 998              		.fpu fpv4-sp-d16
 1000              	HAL_PWR_DisableSEVOnPend:
 1001              	.LFB146:
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** 
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** /**
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @brief Disables CORTEX M4 SEVONPEND bit. 
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @note Clears SEVONPEND bit of SCR register. When this bit is set, this causes 
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.         
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   * @retval None
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   */
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** void HAL_PWR_DisableSEVOnPend(void)
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** {
 1002              		.loc 1 553 1
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 0
 1005              		@ frame_needed = 1, uses_anonymous_args = 0
 1006              		@ link register save eliminated.
 1007 0000 80B4     		push	{r7}
 1008              	.LCFI76:
 1009              		.cfi_def_cfa_offset 4
 1010              		.cfi_offset 7, -4
 1011 0002 00AF     		add	r7, sp, #0
 1012              	.LCFI77:
 1013              		.cfi_def_cfa_register 7
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   /* Clear SEVONPEND bit of Cortex System Control Register */
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 1014              		.loc 1 555 3
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 28


 1015 0004 054B     		ldr	r3, .L60
 1016 0006 1B69     		ldr	r3, [r3, #16]
 1017 0008 044A     		ldr	r2, .L60
 1018 000a 23F01003 		bic	r3, r3, #16
 1019 000e 1361     		str	r3, [r2, #16]
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c **** }
 1020              		.loc 1 556 1
 1021 0010 00BF     		nop
 1022 0012 BD46     		mov	sp, r7
 1023              	.LCFI78:
 1024              		.cfi_def_cfa_register 13
 1025              		@ sp needed
 1026 0014 5DF8047B 		ldr	r7, [sp], #4
 1027              	.LCFI79:
 1028              		.cfi_restore 7
 1029              		.cfi_def_cfa_offset 0
 1030 0018 7047     		bx	lr
 1031              	.L61:
 1032 001a 00BF     		.align	2
 1033              	.L60:
 1034 001c 00ED00E0 		.word	-536810240
 1035              		.cfi_endproc
 1036              	.LFE146:
 1038              		.text
 1039              	.Letext0:
 1040              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_de
 1041              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdint
 1042              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1043              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1044              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1045              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1046              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr.h"
 1047              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_pwr.c
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:17     .text.HAL_PWR_DeInit:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:25     .text.HAL_PWR_DeInit:0000000000000000 HAL_PWR_DeInit
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:66     .text.HAL_PWR_DeInit:0000000000000028 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:71     .text.HAL_PWR_EnableBkUpAccess:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:78     .text.HAL_PWR_EnableBkUpAccess:0000000000000000 HAL_PWR_EnableBkUpAccess
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:124    .text.HAL_PWR_EnableBkUpAccess:0000000000000020 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:130    .text.HAL_PWR_DisableBkUpAccess:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:137    .text.HAL_PWR_DisableBkUpAccess:0000000000000000 HAL_PWR_DisableBkUpAccess
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:183    .text.HAL_PWR_DisableBkUpAccess:0000000000000020 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:189    .text.HAL_PWR_ConfigPVD:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:196    .text.HAL_PWR_ConfigPVD:0000000000000000 HAL_PWR_ConfigPVD
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:324    .text.HAL_PWR_ConfigPVD:00000000000000b8 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:330    .text.HAL_PWR_EnablePVD:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:337    .text.HAL_PWR_EnablePVD:0000000000000000 HAL_PWR_EnablePVD
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:370    .text.HAL_PWR_EnablePVD:0000000000000014 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:375    .text.HAL_PWR_DisablePVD:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:382    .text.HAL_PWR_DisablePVD:0000000000000000 HAL_PWR_DisablePVD
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:415    .text.HAL_PWR_DisablePVD:0000000000000014 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:420    .text.HAL_PWR_EnableWakeUpPin:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:427    .text.HAL_PWR_EnableWakeUpPin:0000000000000000 HAL_PWR_EnableWakeUpPin
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:469    .text.HAL_PWR_EnableWakeUpPin:0000000000000020 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:474    .text.HAL_PWR_DisableWakeUpPin:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:481    .text.HAL_PWR_DisableWakeUpPin:0000000000000000 HAL_PWR_DisableWakeUpPin
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:524    .text.HAL_PWR_DisableWakeUpPin:0000000000000024 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:529    .text.HAL_PWR_EnterSLEEPMode:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:536    .text.HAL_PWR_EnterSLEEPMode:0000000000000000 HAL_PWR_EnterSLEEPMode
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:609    .text.HAL_PWR_EnterSLEEPMode:0000000000000034 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:614    .text.HAL_PWR_EnterSTOPMode:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:621    .text.HAL_PWR_EnterSTOPMode:0000000000000000 HAL_PWR_EnterSTOPMode
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:707    .text.HAL_PWR_EnterSTOPMode:0000000000000050 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:713    .text.HAL_PWR_EnterSTANDBYMode:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:720    .text.HAL_PWR_EnterSTANDBYMode:0000000000000000 HAL_PWR_EnterSTANDBYMode
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:767    .text.HAL_PWR_EnterSTANDBYMode:0000000000000028 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:773    .text.HAL_PWR_PVD_IRQHandler:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:780    .text.HAL_PWR_PVD_IRQHandler:0000000000000000 HAL_PWR_PVD_IRQHandler
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:826    .text.HAL_PWR_PVDCallback:0000000000000000 HAL_PWR_PVDCallback
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:814    .text.HAL_PWR_PVD_IRQHandler:0000000000000020 $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:819    .text.HAL_PWR_PVDCallback:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:855    .text.HAL_PWR_EnableSleepOnExit:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:862    .text.HAL_PWR_EnableSleepOnExit:0000000000000000 HAL_PWR_EnableSleepOnExit
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:896    .text.HAL_PWR_EnableSleepOnExit:000000000000001c $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:901    .text.HAL_PWR_DisableSleepOnExit:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:908    .text.HAL_PWR_DisableSleepOnExit:0000000000000000 HAL_PWR_DisableSleepOnExit
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:942    .text.HAL_PWR_DisableSleepOnExit:000000000000001c $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:947    .text.HAL_PWR_EnableSEVOnPend:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:954    .text.HAL_PWR_EnableSEVOnPend:0000000000000000 HAL_PWR_EnableSEVOnPend
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:988    .text.HAL_PWR_EnableSEVOnPend:000000000000001c $d
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:993    .text.HAL_PWR_DisableSEVOnPend:0000000000000000 $t
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:1000   .text.HAL_PWR_DisableSEVOnPend:0000000000000000 HAL_PWR_DisableSEVOnPend
/var/folders/vq/qt4vp3kd5rxf7v2b6_fdtdt80000gn/T//cccpa0Ya.s:1034   .text.HAL_PWR_DisableSEVOnPend:000000000000001c $d

NO UNDEFINED SYMBOLS
